   1                                            ; HP-45 ROM source code from United States Patent 4,001,569
   2                                            ; keyed in by Eric Smith on 3/9/95 - any errors are probably mine
   3                                            
   4                                                    .rom @00
   5                                            
   6   L00000:  ..1.1.11.1  -> L00053           pwo1:   jsb     pwo2
   7                                            
   8   L00001:  11...1....  -> L06002  *****    tms5:   select rom 6
   9                                            
  10   L00002:  .1..1.1..1  -> L00112           tms2:   jsb frac
  11   L00003:  11..1.111.                              a exchange b[w]
  12   L00004:  11111..11.                              a + 1 -> a[m]
  13   L00005:  .1..111.1.                              a -> b[xs]
  14   L00006:  11.1111.1.                              a - 1 -> a[xs]
  15   L00007:  111...111.                              a + b -> a[w]
  16   L00010:  1.111.1.1.                              0 -> a[x]
  17   L00011:  111...1..1  -> L00342                   jsb mlop
  18   L00012:  111...1..1  -> L00342                   jsb mlop
  19   L00013:  1.111.1.1.                              0 -> a[x]
  20   L00014:  11..1..1.1  -> L00311                   jsb norm
  21   L00015:  .11..1..11  -> L00144                   go to tms4
  22                                            
  23   L00016:  1....1.1..                      dmdtz4: if s8 # 1
  24   L00017:  .1.1...111  -> L00121                        then go to dmt2
  25   L00020:  1....111.1  -> L00207           tdms:   jsb mode
  26   L00021:  111.1.111.                              a exchange c[w]
  27   L00022:  .11...111.                              c -> a[w]
  28   L00023:  ......1.11  -> L00002                   go to tms2
  29                                            
  30   L00024:  1.1..1....  -> L05025  *****    pwo3:   select rom 5
  31                                            
  32   L00025:  1....111.1  -> L00207           tpl4:   jsb mode
  33   L00026:  111.1.111.                              a exchange c[w]
  34   L00027:  1....1....  -> L04030  *****            select rom 4
  35                                            
  36   L00030:  ..1..1....  -> L01031  *****    ret1:   select rom 1
  37                                            
  38   L00031:  ..11.1.1..                      trc1z1: if s3 # 1
  39   L00032:  ...11...11  -> L00030                        then go to ret1
  40   L00033:  .1..1.1...                              c -> stack
  41   L00034:  ..11..111.                              0 -> c[w]
  42   L00035:  1..111....                              c -> data address
  43   L00036:  ..........                              no operation
  44   L00037:  1.11111...                              data -> c
  45   L00040:  111.1.111.                              a exchange c[w]
  46   L00041:  1..1111..1  -> L00236                   jsb div1
  47   L00042:  11...11..1  -> L00306                   jsb exch
  48   L00043:  1.1...1..1  -> L00242                   jsb mul1
  49   L00044:  11...11..1  -> L00306                   jsb exch
  50   L00045:  1.1111111.                              0 -> a[s]
  51   L00046:  1.11111...                              data -> c
  52   L00047:  .11.11111.                              if c[s] = 0
  53   L00050:  ..1.11.111  -> L00055                        then go to trc2
  54   L00051:  11.111111.                              a - 1 -> a[s]
  55   L00052:  ..1.11.1.1  -> L00055                   jsb trc2
  56                                            
  57   L00053:  ...1.1..11  -> L00024           pwo2:   go to pwo3
  58                                            
  59   L00054:  ..1..1....  -> L01055  *****    sqt1:   select rom 1
  60                                            
  61   L00055:  111.1.111.                      trc2:   a exchange c[w]
  62   L00056:  1....1.1..                              if s8 # 1
  63   L00057:  1111..1.11  -> L00362                        then go to reg9z4
  64   L00060:  ..1111111.                              0 - c - 1 -> c[s]
  65   L00061:  1111..1..1  -> L00362                   jsb reg9z4
  66                                            
  67   L00062:  ...1.1.1..                      sqrtz3: if s1 #  1
  68   L00063:  ..1.11..11  -> L00054                        then go to sqt1
  69   L00064:  1.1..1.1..                              if s10 # 1
  70   L00065:  .11.1..111  -> L00151                        then go to tn12
  71   L00066:  ..111.1.11  -> L00072                   go to mag1z1
  72                                            
  73   L00067:  ..1..1....  -> L01070  *****    tanx:   select rom 1
  74                                            
  75   L00070:  .11...111.                      sn12:   c -> a[w]
  76   L00071:  ..1..1....  -> L01072  *****            select rom 1
  77                                            
  78   L00072:  111.1.111.                      mag1z1: a exchange c[w]
  79   L00073:  .11...111.                              c -> a[w]
  80   L00074:  .111111.1.                              c + 1 -> c[xs]
  81   L00075:  .1...11.11  -> L00106                   if no carry go to mag3
  82   L00076:  .11.1.1.1.                              if c[x] = 0
  83   L00077:  .1...11.11  -> L00106                        then go to mag3
  84   L00100:  ..11..111.                              0 -> c[w]
  85   L00101:  ......11..                              0 -> p
  86   L00102:  .1.1.11...                              load constant 5
  87   L00103:  11....11..                              12 -> p
  88   L00104:  .111..1.1.                              a + c -> c[x]
  89   L00105:  111.1.1111  -> L00353                   if no carry go to mag4
  90   L00106:  1.1..1.1..                      mag3:   if s10 # 1
  91   L00107:  .111.1.111  -> L00165                        then go to rom1
  92   L00110:  111.1.111.                              a exchange c[w]
  93   L00111:  ..111...11  -> L00070                   go to sn12
  94                                            
  95   L00112:  ..11..1.1.                      frac:   0 -> c[x]
  96   L00113:  ......11..                              0 -> p
  97   L00114:  .1.1.11...                              load constant 5
  98   L00115:  11.1..1.1.                              a - c -> a[x]
  99   L00116:  1..11.1.1.                              if a[x] >= 1
 100   L00117:  11..11..11  -> L00314                        then go to frc1
 101   L00120:  1111111111  -> L00377                   go to err2
 102                                            
 103   L00121:  .1..1.1..1  -> L00112           dmt2:   jsb frac
 104   L00122:  111...11.1  -> L00343                   jsb mlp0
 105   L00123:  ....1.111.                              0 -> b[w]
 106   L00124:  11..11..1.                              a exchange b[wp]
 107   L00125:  11..1.111.                              a exchange b[w]
 108   L00126:  .1....111.                              shift left a[w]
 109   L00127:  111..1.1.1  -> L00345                   jsb mlp2
 110   L00130:  .111...1..                              1 -> s7
 111   L00131:  11..1..1.1  -> L00311                   jsb norm
 112   L00132:  ..11..111.                              0 -> c[w]
 113   L00133:  ..11.11...                              load constant 3
 114   L00134:  .11..11...                              load constant 6
 115   L00135:  11....11..                              12 -> p
 116   L00136:  1..1111..1  -> L00236                   jsb div1
 117   L00137:  1....11..1  -> L00206                   jsb mod0
 118   L00140:  .11111.111  -> L00175                   go to fst0
 119                                            
 120   L00141:  .1111.1.1.                      rtfg:   c + 1 -> c[x]
 121   L00142:  .1111...1.                              c + 1 -> c[p]
 122   L00143:  1.....1111  -> L00203                   if no carry go to dvml
 123                                            
 124   L00144:  ..11..111.                      tms4:   0 -> c[w]
 125   L00145:  ..1...11..                              2 -> p
 126   L00146:  .1...11...                              load constant 4
 127   L00147:  111.1.111.                              a exchange c[w]
 128   L00150:  .......111  -> L00001                   go to tms5
 129                                            
 130   L00151:  ..1..1....  -> L01152  *****    tn12:   select rom 1
 131                                            
 132   L00152:  .111...1..                      tpol:   1 -> s7
 133   L00153:  .1...1.1..                              if s4 # 1
 134   L00154:  .111..1111  -> L00163                        then go to tpl3
 135   L00155:  1.1.1.111.                              c + c -> c[w]
 136   L00156:  .111.1111.                              a + c -> c[s]
 137   L00157:  1..11..11.                              if a[m] >= 1
 138   L00160:  .111..1.11  -> L00162                        then go to tpl2
 139   L00161:  ..1111111.                              0 - c - 1 -> c[s]
 140   L00162:  1.1..11..1  -> L00246           tpl2:   jsb sub1
 141   L00163:  ...1...1..                      tpl3:   1 -> s1
 142   L00164:  ...1.1.111  -> L00025                   go to tpl4
 143                                            
 144   L00165:  ..1..1....  -> L01166  *****    rom1:   select rom 1
 145                                            
 146   L00166:  1....1.1..                      drg1z1: if s8 # 1
 147   L00167:  .11.1.1.11  -> L00152                        then go to tpol
 148   L00170:  1....111.1  -> L00207           drg0:   jsb mode
 149   L00171:  ...1...1..                              1 -> s1
 150   L00172:  1.1..1.1..                              if s10 # 1
 151   L00173:  ..111.1.11  -> L00072                        then go to mag1z1
 152   L00174:  1111..1111  -> L00363                   go to regx
 153                                            
 154   L00175:  111.1.111.                      fst0:   a exchange c[w]
 155   L00176:  .11..1....  -> L03177  *****    fst1:   select rom 3
 156                                            
 157   L00177:  .1.11.1.1.                      gtfd:   c - 1 -> c[x]
 158   L00200:  .1.11.1.1.                              c - 1 -> c[x]
 159   L00201:  .111...1..                              1 -> s7
 160   L00202:  .1.11...1.                      dtfr:   c - 1 -> c[p]
 161   L00203:  1.1..1.1..                      dvml:   if s10 # 1
 162   L00204:  1..1111.11  -> L00236                        then go to div1
 163   L00205:  1.1...1.11  -> L00242                   go to mul1
 164                                            
 165   L00206:  1.1.1..1..                      mod0:   0 -> s10
 166   L00207:  .111...1..                      mode:   1 -> s7
 167   L00210:  .1..1..1..                              0 -> s4
 168   L00211:  .11....1..                              1 -> s6
 169   L00212:  1.1.1.1...                              m -> c
 170   L00213:  .11.11111.                              if c[s] = 0
 171   L00214:  1...111.11  -> L00216                        then go to mod2
 172   L00215:  .1.....1..                              1 -> s4
 173   L00216:  .11111111.                      mod2:   c + 1 -> c[s]
 174   L00217:  1..1...111  -> L00221                   if no carry go to mod3
 175   L00220:  .11.1..1..                              0 -> s6
 176   L00221:  ..11..111.                      mod3:   0 -> c[w]
 177   L00222:  .1111.1.1.                              c + 1 -> c[x]
 178   L00223:  ...1.1.1..                              if s1 # 1
 179   L00224:  11......11  -> L00300                        then go to degr
 180   L00225:  .1...1.1..                              if s4 # 1
 181   L00226:  111....111  -> L00341                        then go to ret0
 182   L00227:  .1111..1..                              0 -> s7
 183   L00230:  .11..1.1..                              if s6 # 1
 184   L00231:  1.....1.11  -> L00202                        then go to dtfr
 185   L00232:  .11....111  -> L00141                   go to rtfg
 186                                            
 187   L00233:  1.1.1.1.11  -> L00252           add3z1: go to add3
 188                                            
 189   L00234:  1.1..1.1..                      mldv:   if s10 # 1
 190   L00235:  1.1...1.11  -> L00242                        then go to mul1
 191   L00236:  1.11...1..                      div1:   1 -> s11
 192   L00237:  ...11..1..                      div0:   0 -> s1
 193   L00240:  ....1.111.                              0 -> b[w]
 194   L00241:  1.1..1.111  -> L00245                   go to divx
 195                                            
 196   L00242:  1.11...1..                      mul1:   1 -> s11
 197   L00243:  ...11..1..                      mul0:   0 -> s1
 198   L00244:  ..1..1....  -> L01245  *****    mulx:   select rom 1
 199                                            
 200   L00245:  ..1..1....  -> L01246  *****    divx:   select rom 1
 201                                            
 202   L00246:  1.11...1..                      sub1:   1 -> s11
 203   L00247:  ..1111111.                      sub0:   0 - c - 1 -> c[s]
 204   L00250:  ...11..1..                      add0zx: 0 -> s1
 205   L00251:  ..1.1..1..                              0 -> s2
 206   L00252:  ....1.111.                      add3:   0 -> b[w]
 207   L00253:  1111111.1.                              a + 1 -> a[xs]
 208   L00254:  1111111.1.                              a + 1 -> a[xs]
 209   L00255:  .111111.1.                              c + 1 -> c[xs]
 210   L00256:  .111111.1.                              c + 1 -> c[xs]
 211   L00257:  ...1..1.1.                              if a >= c[x]
 212   L00260:  1.11..1.11  -> L00262                        then go to add4
 213   L00261:  111.1.111.                              a exchange c[w]
 214   L00262:  111.1..11.                      add4:   a exchange c[m]
 215   L00263:  .11.1..11.                              if c[m] = 0
 216   L00264:  1.11.11.11  -> L00266                        then go to add5
 217   L00265:  111.1.111.                              a exchange c[w]
 218   L00266:  1...1..11.                      add5:   b exchange c[m]
 219   L00267:  ...1..1.1.                      add6:   if a >= c[x]
 220   L00270:  1.11111.11  -> L00276                        then go to add7
 221   L00271:  1.1...111.                      add8:   shift right b[w]
 222   L00272:  11111.1.1.                              a + 1 -> a[x]
 223   L00273:  ......111.                              if b[w] = 0
 224   L00274:  1.11111.11  -> L00276                        then go to add7
 225   L00275:  1.11.11111  -> L00267                   go to add6
 226                                            
 227   L00276:  ..1..1....  -> L01277  *****    add7:   select rom 1
 228                                            
 229   L00277:  1111111111  -> L00377           err2z1: go to err2
 230                                            
 231   L00300:  .11..1.1..                      degr:   if s6 # 1
 232   L00301:  111....111  -> L00341                        then go to ret0
 233   L00302:  .1111..1..                              0 -> s7
 234   L00303:  .1...1.1..                              if s4 # 1
 235   L00304:  1.....1.11  -> L00202                        then go to dtfr
 236   L00305:  .111111111  -> L00177                   go to gtfd
 237                                            
 238   L00306:  .11.1.1...                      exch:   stack -> a
 239   L00307:  .1..1.1...                              c -> stack
 240   L00310:  ....11....                              return
 241                                            
 242   L00311:  1.11...1..                      norm:   1 -> s11
 243   L00312:  ..1..1....  -> L01313  *****            select rom 1
 244                                            
 245   L00313:  ..1..1....  -> L01314  *****    pii2:   select rom 1
 246                                            
 247   L00314:  1...1..11.                      frc1:   b exchange c[m]
 248   L00315:  1.1...111.                      frc2:   shift right b[w]
 249   L00316:  11111.1.1.                              a + 1 -> a[x]
 250   L00317:  11..11.111  -> L00315                   if no carry go to frc2
 251   L00320:  1.111.111.                              0 -> a[w]
 252   L00321:  .11...11..                              6 -> p
 253   L00322:  ....11....                              return
 254                                            
 255   L00323:  1.11.1.1..                      pii4:   if s11 # 1
 256   L00324:  11.11...11  -> L00330                        then go to pirt
 257   L00325:  1.1.1.111.                              c + c -> c[w]
 258   L00326:  .111...1..                              1 -> s7
 259   L00327:  1..111..11  -> L00234                   go to mldv
 260                                            
 261   L00330:  ..1..1....  -> L01331  *****    pirt:   select rom 1
 262                                            
 263   L00331:  11....11..                      pii4z1: 12 -> p
 264   L00332:  11.1..1111  -> L00323                   go to pii4
 265                                            
 266   L00333:  1.11.1.1..                      retnz1: if s11 # 1
 267   L00334:  11111..111  -> L00371                        then go to rtrn
 268   L00335:  1.11...1..                              1 -> s11
 269   L00336:  .111.1.1..                              if s7 # 1
 270   L00337:  11..1.1111  -> L00313                        then go to pii2
 271   L00340:  1.111..1..                              0 -> s11
 272   L00341:  ....11....                      ret0:   return
 273                                            
 274   L00342:  ....1.111.                      mlop:   0 -> b[w]
 275   L00343:  11..11..1.                      mlp0:   a exchange b[wp]
 276   L00344:  1.1...111.                              shift right b[w]
 277   L00345:  1.1...11..                      mlp2:   10 -> p
 278   L00346:  111...111.                      mlp3:   a + b -> a[w]
 279   L00347:  .....111..                              p - 1 -> p
 280   L00350:  .1..1.11..                              if p # 4
 281   L00351:  111..11.11  -> L00346                        then go to mlp3
 282   L00352:  ....11....                              return
 283                                            
 284   L00353:  ..11..111.                      mag4:   0 -> c[w]
 285   L00354:  .1111...1.                              c + 1 -> c[p]
 286   L00355:  1.1..1.1..                              if s10 # 1
 287   L00356:  ..11.11111  -> L00067                        then go to tanx
 288   L00357:  .11.1..111  -> L00151                   go to tn12
 289                                            
 290   L00360:  ...1.1.1..                      reg9:   if s1 # 1
 291   L00361:  .111111.11  -> L00176                        then go to fst1
 292   L00362:  111.1.111.                      reg9z4: a exchange c[w]
 293   L00363:  ..11..111.                      regx:   0 -> c[w]
 294   L00364:  .1.11...1.                              c - 1 -> c[p]
 295   L00365:  1..111....                              c -> data address
 296   L00366:  ..11..111.                              0 -> c[w]
 297   L00367:  1.1111....                              c -> data
 298   L00370:  .11111.111  -> L00175                   go to fst0
 299                                            
 300   L00371:  ..11.1.1..                      rtrn:   if s3 # 1
 301   L00372:  1111....11  -> L00360                        then go to reg9
 302   L00373:  1.1..1.1..                              if s10 # 1
 303   L00374:  1111111.11  -> L00376                        then go to ret5
 304   L00375:  1....1....  -> L04376  *****    ret4:   select rom 4
 305                                            
 306   L00376:  1.1..1....  -> L05377  *****    ret5:   select rom 5
 307                                            
 308   L00377:  .1...1....  -> L02000  *****    err2:   select rom 2
 309                                            
00250 add0zx 204
00252 add3 206
00233 add3z1 187
00262 add4 214
00266 add5 218
00267 add6 219
00276 add7 227
00271 add8 221
00300 degr 231
00237 div0 192
00236 div1 191
00245 divx 200
00016 dmdtz4 23
00121 dmt2 103
00170 drg0 148
00166 drg1z1 146
00202 dtfr 160
00203 dvml 161
00377 err2 308
00277 err2z1 229
00306 exch 238
00112 frac 95
00314 frc1 247
00315 frc2 248
00175 fst0 154
00176 fst1 155
00177 gtfd 157
00072 mag1z1 78
00106 mag3 90
00353 mag4 284
00234 mldv 189
00342 mlop 274
00343 mlp0 275
00345 mlp2 277
00346 mlp3 278
00206 mod0 165
00216 mod2 173
00221 mod3 176
00207 mode 166
00243 mul0 197
00242 mul1 196
00244 mulx 198
00311 norm 242
00313 pii2 245
00323 pii4 255
00331 pii4z1 263
00330 pirt 261
00000 pwo1 6
00053 pwo2 57
00024 pwo3 30
00360 reg9 290
00362 reg9z4 292
00363 regx 293
00341 ret0 272
00030 ret1 36
00375 ret4 304
00376 ret5 306
00333 retnz1 266
00165 rom1 144
00141 rtfg 120
00371 rtrn 300
00070 sn12 75
00062 sqrtz3 67
00054 sqt1 59
00247 sub0 203
00246 sub1 202
00067 tanx 73
00020 tdms 25
00002 tms2 10
00144 tms4 124
00001 tms5 8
00151 tn12 130
00162 tpl2 140
00163 tpl3 141
00025 tpl4 32
00152 tpol 132
00031 trc1z1 38
00055 trc2 61
 311                                            
 312                                                    .rom @01
 313                                            
 314   L01000:  1...11111.                              b exchange c[s]
 315   L01001:  1111..1111  -> L01363                   go to tan13
 316                                            
 317   L01002:  11..1.111.                      tan15:  a exchange b[w]
 318   L01003:  ..11.....1  -> L01060                   jsb tnm11
 319   L01004:  1.11111...                              data -> c
 320   L01005:  111.1.111.                              a exchange c[w]
 321   L01006:  ..11.....1  -> L01060                   jsb tnm11
 322   L01007:  1.11111...                              data -> c
 323   L01010:  111.1.111.                              a exchange c[w]
 324   L01011:  1..1.1.1..                      tanx:   if s9 # 1
 325   L01012:  ....11..11  -> L01014                        then go to tan16
 326   L01013:  111.1.111.                              a exchange c[w]
 327   L01014:  .1.1.1.1..                      tan16:  if s5 # 1
 328   L01015:  ...11.1.11  -> L01032                        then go to asn12
 329   L01016:  ...111111.                              if c[s] >= 1
 330   L01017:  ...1...111  -> L01021                        then go to tan17
 331   L01020:  1...1..1..                              0 -> s8
 332   L01021:  ..11.1111.                      tan17:  0 -> c[s]
 333   L01022:  1.1..11..1  -> L01246                   jsb div11
 334   L01023:  1.1111....                      asn11:  c -> data
 335   L01024:  1.1..1.1.1  -> L01245                   jsb mpy11
 336   L01025:  1..11....1  -> L01230                   jsb add10
 337   L01026:  ..1.11.1.1  -> L01055                   jsb sqt11
 338   L01027:  1.11111...                              data -> c
 339   L01030:  .....1....  -> L00031  *****            select rom 0
 340                                            
 341   L01031:  111.1.111.                      asn1z0: a exchange c[w]
 342   L01032:  1.1..11..1  -> L01246           asn12:  jsb div11
 343   L01033:  1.1..1.1..                              if s10 # 1
 344   L01034:  11.11.1.11  -> L01332                        then go to rtn12
 345   L01035:  1.111.111.                      atn11:  0 -> a[w]
 346   L01036:  11111...1.                              a + 1 -> a[p]
 347   L01037:  .1..1..11.                              a -> b[m]
 348   L01040:  111.1..11.                              a exchange c[m]
 349   L01041:  .1.11.1.1.                      atn12:  c - 1 -> c[x]
 350   L01042:  1.1..1..1.                              shift right b[wp]
 351   L01043:  .11.111.1.                              if c[xs] = 0
 352   L01044:  ..1....111  -> L01041                        then go to atn12
 353   L01045:  1.11.1..1.                      atn13:  shift right a[wp]
 354   L01046:  .1111.1.1.                              c + 1 -> c[x]
 355   L01047:  ..1..1.111  -> L01045                   if no carry go to atn13
 356   L01050:  1.11..111.                              shift right a[w]
 357   L01051:  1.1...111.                              shift right b[w]
 358   L01052:  1.1111....                              c -> data
 359   L01053:  1...1.111.                      atn14:  b exchange c[w]
 360   L01054:  .1...11.11  -> L01106                   go to atn18
 361                                            
 362   L01055:  1...1.111.                      sqt11:  b exchange c[w]
 363   L01056:  .1....11..                              4 -> p
 364   L01057:  11.1111.11  -> L01336                   go to sqt14
 365                                            
 366   L01060:  1.1111....                      tnm11:  c -> data
 367   L01061:  111.1.111.                              a exchange c[w]
 368   L01062:  .11.1...1.                              if c[p] = 0
 369   L01063:  ..11.1.111  -> L01065                        then go to tnm12
 370   L01064:  ..1.1.111.                              0 - c -> c[w]
 371   L01065:  .11...111.                      tnm12:  c -> a[w]
 372   L01066:  ..1...1.1.                              b -> c[x]
 373   L01067:  11..1.1111  -> L01313                   go to add15
 374                                            
 375   L01070:  ....1..111  -> L01011           tanxz0: go to tanx
 376                                            
 377   L01071:  .....1....  -> L00072  *****    tploxj: select rom 0
 378                                            
 379   L01072:  .1.1.1.1..                      sin12:  if s5 # 1
 380   L01073:  ...111.111  -> L01035                        then go to atn11
 381   L01074:  ..1111111.                              0 - c - 1 -> c[s]
 382   L01075:  111.11111.                              a exchange c[s]
 383   L01076:  ...1..1111  -> L01023                   go to asn11
 384                                            
 385   L01077:  1.1..1..1.                      atn15:  shift right b[wp]
 386   L01100:  11.111111.                      atn16:  a - 1 -> a[s]
 387   L01101:  ..11111111  -> L01077                   if no carry go to atn15
 388   L01102:  .11111111.                              c + 1 -> c[s]
 389   L01103:  11..11..1.                              a exchange b[wp]
 390   L01104:  .111.1..1.                              a + c -> c[wp]
 391   L01105:  11..1.111.                              a exchange b[w]
 392   L01106:  .1..1.111.                      atn18:  a -> b[w]
 393   L01107:  11.1.1..1.                              a - c -> a[wp]
 394   L01110:  .1......11  -> L01100                   if no carry go to atn16
 395   L01111:  111.1.111.                              a exchange c[w]
 396   L01112:  1.11111...                              data -> c
 397   L01113:  1..1..111.                              shift right c[w]
 398   L01114:  111.11111.                              a exchange c[s]
 399   L01115:  11..1.111.                              a exchange b[w]
 400   L01116:  .1...1..1.                              shift left a[wp]
 401   L01117:  1.1111....                              c -> data
 402   L01120:  111111111.                              a + 1 -> a[s]
 403   L01121:  111111111.                              a + 1 -> a[s]
 404   L01122:  ..1.1.1111  -> L01053                   if no carry go to atn14
 405   L01123:  ..11..111.                              0 -> c[w]
 406   L01124:  ....1.1.1.                              0 -> b[x]
 407   L01125:  1.11.1.11.                              shift right a[ms]
 408   L01126:  1.11..1..1  -> L01262                   jsb div14
 409   L01127:  11.11...1.                              a - 1 -> a[p]
 410   L01130:  1.11111...                              data -> c
 411   L01131:  .1....11..                              4 -> p
 412   L01132:  1.1..1...1  -> L01244           atn17:  jsb pqo13
 413   L01133:  .11...11..                              6 -> p
 414   L01134:  1..11.11.1  -> L01233                   jsb pmu11
 415   L01135:  1.....11..                              8 -> p
 416   L01136:  1..11.11.1  -> L01233                   jsb pmu11
 417   L01137:  ..1...11..                              2 -> p
 418   L01140:  1....11...                              load constant 8
 419   L01141:  1.1...11..                              10 -> p
 420   L01142:  1..11.11.1  -> L01233                   jsb pmu11
 421   L01143:  1...111..1  -> L01216                   jsb atcd1
 422   L01144:  1..11.11.1  -> L01233                   jsb pmu11
 423   L01145:  11..11...1  -> L01314                   jsb atc1
 424   L01146:  .1....111.                              shift left a[w]
 425   L01147:  1..11.11.1  -> L01233                   jsb pmu11
 426   L01150:  ..1...111.                              b -> c[w]
 427   L01151:  11..1.11.1  -> L01313                   jsb add15
 428   L01152:  11..11...1  -> L01314           tan12:  jsb atc1
 429   L01153:  1.1.1.111.                              c + c -> c[w]
 430   L01154:  1.1..1.1..                              if s10 # 1
 431   L01155:  .111.1.111  -> L01165                        then go to rom0
 432   L01156:  1..1.1.1..                              if s9 # 1
 433   L01157:  .111.1.111  -> L01165                        then go to rom0
 434   L01160:  111.1.111.                              a exchange c[w]
 435   L01161:  ..1111111.                              0 - c - 1 -> c[s]
 436   L01162:  1..11.1..1  -> L01232                   jsb add11
 437   L01163:  11..11...1  -> L01314                   jsb atc1
 438   L01164:  1.1.1.111.                              c + c -> c[w]
 439   L01165:  .....1....  -> L00166  *****    rom0:   select rom 0
 440                                            
 441   L01166:  11..11...1  -> L01314           lpi11:  jsb atc1
 442   L01167:  1.1.1.111.                              c + c -> c[w]
 443   L01170:  1.1.1.111.                              c + c -> c[w]
 444   L01171:  1..1.1.1.1  -> L01225                   jsb rtn11
 445   L01172:  1.1.1.111.                              c + c -> c[w]
 446   L01173:  111.1.11.1  -> L01353                   jsb pre11
 447   L01174:  11..11...1  -> L01314                   jsb atc1
 448   L01175:  1.1...11..                              10 -> p
 449   L01176:  1..111...1  -> L01234                   jsb pqo11
 450   L01177:  1...111..1  -> L01216                   jsb atcd1
 451   L01200:  1.....11..                              8 -> p
 452   L01201:  1..111.1.1  -> L01235                   jsb pqo12
 453   L01202:  ..1...11..                              2 -> p
 454   L01203:  1....11...                              load constant 8
 455   L01204:  .11...11..                              6 -> p
 456   L01205:  1..111...1  -> L01234                   jsb pqo11
 457   L01206:  .1....11..                              4 -> p
 458   L01207:  1..111...1  -> L01234                   jsb pqo11
 459   L01210:  1..111...1  -> L01234                   jsb pqo11
 460   L01211:  11..1.111.                              a exchange b[w]
 461   L01212:  1..1..111.                              shift right c[w]
 462   L01213:  11.1..11..                              13 -> p
 463   L01214:  .1.1.11...                              load constant 5
 464   L01215:  111111..11  -> L01374                   go to tan14
 465                                            
 466   L01216:  .11...11..                      atcd1:  6 -> p
 467   L01217:  1....11...                              load constant 8
 468   L01220:  .11..11...                              load constant 6
 469   L01221:  .1.1.11...                              load constant 5
 470   L01222:  ..1..11...                              load constant 2
 471   L01223:  .1...11...                              load constant 4
 472   L01224:  1..1.11...                              load constant 9
 473   L01225:  ...1.1.1..                      rtn11:  if s1 # 1
 474   L01226:  11.11.1.11  -> L01332                        then go to rtn12
 475   L01227:  ....11....                              return
 476                                            
 477   L01230:  1.111.111.                      add10:  0 -> a[w]
 478   L01231:  11111...1.                              a + 1 -> a[p]
 479   L01232:  .....1....  -> L00233  *****    add11:  select rom 0
 480                                            
 481   L01233:  .1...1....  -> L02234  *****    pmu11:  select rom 2
 482                                            
 483   L01234:  .1....111.                      pqo11:  shift left a[w]
 484   L01235:  1.1..1.11.                      pqo12:  shift right b[ms]
 485   L01236:  1...1.111.                              b exchange c[w]
 486   L01237:  1.1....111  -> L01241                   go to pqo16
 487                                            
 488   L01240:  .11111111.                      pqo15:  c + 1 -> c[s]
 489   L01241:  11....111.                      pqo16:  a - b -> a[w]
 490   L01242:  1.1.....11  -> L01240                   if no carry go to pqo15
 491   L01243:  111...111.                              a + b -> a[w]
 492   L01244:  .1...1....  -> L02245  *****    pqo13:  select rom 2
 493                                            
 494   L01245:  .1...1....  -> L02246  *****    mpy11:  select rom 2
 495                                            
 496   L01246:  .1.1..1.1.                      div11:  a - c -> c[x]
 497   L01247:  .1...1....  -> L02250  *****            select rom 2
 498                                            
 499   L01250:  .1111...1.                      sqt15:  c + 1 -> c[p]
 500   L01251:  11.1..111.                      sqt16:  a - c -> a[w]
 501   L01252:  1.1.1...11  -> L01250                   if no carry go to sqt15
 502   L01253:  1111..111.                              a + c -> a[w]
 503   L01254:  .1....111.                              shift left a[w]
 504   L01255:  .....111..                              p - 1 -> p
 505   L01256:  1..1.1..1.                      sqt17:  shift right c[wp]
 506   L01257:  ....1.11..                              if p # 0
 507   L01260:  1.1.1..111  -> L01251                        then go to sqt16
 508   L01261:  ..11.1.111  -> L01065                   go to tnm12
 509                                            
 510   L01262:  .1111...1.                      div14:  c + 1 -> c[p]
 511   L01263:  11...1.11.                      div15:  a - b -> a[ms]
 512   L01264:  1.11..1.11  -> L01262                   if no carry go to div14
 513   L01265:  111..1.11.                              a + b -> a[ms]
 514   L01266:  .1...1.11.                              shift left a[ms]
 515   L01267:  .....111..                      div16:  p - 1 -> p
 516   L01270:  ....1.11..                              if p # 0
 517   L01271:  1.11..1111  -> L01263                        then go to div15
 518   L01272:  ..11.1.111  -> L01065                   go to tnm12
 519                                            
 520   L01273:  .....111..                      sqt12:  p - 1 -> p
 521   L01274:  111..1.11.                              a + b -> a[ms]
 522   L01275:  11.11.1111  -> L01333                   if no carry go to sqt18
 523   L01276:  .....1....  -> L00277  *****            select rom 0
 524                                            
 525   L01277:  .1.1111.1.                      add12:  c - 1 -> c[xs]
 526   L01300:  .1.1111.1.                              c - 1 -> c[xs]
 527   L01301:  1.111.1.1.                              0 -> a[x]
 528   L01302:  11.1.1111.                              a - c -> a[s]
 529   L01303:  1..111111.                              if a[s] >= 1
 530   L01304:  11...11.11  -> L01306                        then go to add13
 531   L01305:  .1...1....  -> L02306  *****            select rom 2
 532                                            
 533   L01306:  1......11.                      add13:  if a >= b[m]
 534   L01307:  11..1.1.11  -> L01312                        then go to add14
 535   L01310:  ..1111111.                              0 - c - 1 -> c[s]
 536   L01311:  11..1.111.                              a exchange b[w]
 537   L01312:  11....111.                      add14:  a - b -> a[w]
 538   L01313:  .1...1....  -> L02314  *****    add15:  select rom 2
 539   L01314:  ..11..111.                      atc1:   0 -> c[w]
 540   L01315:  1.11..11..                              11 -> p
 541   L01316:  .111.11...                              load constant 7
 542   L01317:  1....11...                              load constant 8
 543   L01320:  .1.1.11...                              load constant 5
 544   L01321:  ..11.11...                              load constant 3
 545   L01322:  1..1.11...                              load constant 9
 546   L01323:  1....11...                              load constant 8
 547   L01324:  ...1.11...                              load constant 1
 548   L01325:  .11..11...                              load constant 6
 549   L01326:  ..11.11...                              load constant 3
 550   L01327:  .1.1.11...                              load constant 5
 551   L01330:  .....1....  -> L00331  *****            select rom 0
 552                                            
 553   L01331:  ....11....                              return
 554                                            
 555   L01332:  .....1....  -> L00333  *****    rtn12:  select rom 0
 556                                            
 557   L01333:  111...1.1.                      sqt18:  a + b -> a[x]
 558   L01334:  11.1111.11  -> L01336                   if no carry go to sqt14
 559   L01335:  .1.11...1.                              c - 1 -> c[p]
 560   L01336:  .11111111.                      sqt14:  c + 1 -> c[s]
 561   L01337:  ....1.11..                              if p # 0
 562   L01340:  1.111.1111  -> L01273                        then go to sqt12
 563   L01341:  111.1.1.1.                              a exchange c[x]
 564   L01342:  1.111.1.1.                              0 -> a[x]
 565   L01343:  ...11...1.                              if c[p] >= 1
 566   L01344:  111..11.11  -> L01346                        then go to sqt13
 567   L01345:  1.11..111.                              shift right a[w]
 568   L01346:  1..1..111.                      sqt13:  shift right c[w]
 569   L01347:  1...1.1.1.                              b exchange c[x]
 570   L01350:  ..11..1.1.                              0 -> c[x]
 571   L01351:  11....11..                              12 -> p
 572   L01352:  1.1.111.11  -> L01256                   go to sqt17
 573                                            
 574   L01353:  .1...1....  -> L02354  *****    pre11:  select rom 2
 575                                            
 576   L01354:  1.1..1..1.                      tan18:  shift right b[wp]
 577   L01355:  1.1..1..1.                              shift right b[wp]
 578   L01356:  .1.111111.                      tan19:  c - 1 -> c[s]
 579   L01357:  111.11..11  -> L01354                   if no carry go to tan18
 580   L01360:  .111.1..1.                              a + c -> c[wp]
 581   L01361:  11...1..1.                              a - b -> a[wp]
 582   L01362:  1...11..1.                              b exchange c[wp]
 583   L01363:  ..1...111.                      tan13:  b -> c[w]
 584   L01364:  11.111111.                              a - 1 -> a[s]
 585   L01365:  111.111.11  -> L01356                   if no carry go to tan19
 586   L01366:  111.11111.                              a exchange c[s]
 587   L01367:  1.11111...                              data -> c
 588   L01370:  111.1.111.                              a exchange c[w]
 589   L01371:  .....1111.                              if b[s] = 0
 590   L01372:  ......1.11  -> L01002                        then go to tan15
 591   L01373:  .1....111.                              shift left a[w]
 592   L01374:  111.11..1.                      tan14:  a exchange c[wp]
 593   L01375:  1.1111....                              c -> data
 594   L01376:  1.1..1..1.                              shift right b[wp]
 595   L01377:  .1.111111.                              c - 1 -> c[s]
 596                                            
00230 add10 477
00232 add11 479
00277 add12 525
00306 add13 533
00312 add14 537
00313 add15 538
00023 asn11 334
00032 asn12 342
00031 asn1z0 341
00314 atc1 539
00216 atcd1 466
00035 atn11 345
00041 atn12 349
00045 atn13 353
00053 atn14 359
00077 atn15 385
00100 atn16 386
00132 atn17 412
00106 atn18 392
00246 div11 496
00262 div14 510
00263 div15 511
00267 div16 515
00166 lpi11 441
00245 mpy11 494
00233 pmu11 481
00234 pqo11 483
00235 pqo12 484
00244 pqo13 492
00240 pqo15 488
00241 pqo16 489
00353 pre11 574
00165 rom0 439
00225 rtn11 473
00332 rtn12 555
00072 sin12 379
00055 sqt11 362
00273 sqt12 520
00346 sqt13 568
00336 sqt14 560
00250 sqt15 499
00251 sqt16 500
00256 sqt17 505
00333 sqt18 557
00152 tan12 428
00363 tan13 583
00374 tan14 592
00002 tan15 317
00014 tan16 327
00021 tan17 332
00354 tan18 576
00356 tan19 578
00011 tanx 324
00070 tanxz0 375
00060 tnm11 366
00065 tnm12 371
00071 tploxj 377
 598                                            
 599                                                    .rom @02
 600                                            
 601   L02000:  11...1....  -> L06001  *****    err21:  select rom 6
 602   L02001:  11..11111.                      ln24:   a exchange b[s]
 603   L02002:  111111111.                              a + 1 -> a[s]
 604   L02003:  1..1.1.11.                              shift right c[ms]
 605   L02004:  .1...1..1.                              shift left a[wp]
 606   L02005:  ...1..1.11  -> L02022                   go to ln26
 607                                            
 608   L02006:  .11.1.1...                      xty22:  stack -> a
 609   L02007:  1.1..11..1  -> L02246                   jsb mpy21
 610                                            
 611   L02010:  .11...111.                      xty21:  c -> a[w]
 612   L02011:  1....1.1..                              if s8 # 1
 613   L02012:  .1....1.11  -> L02102                        then go to exp21
 614   L02013:  1.111.111.                      ln22:   0 -> a[w]
 615   L02014:  11.1...11.                              a - c -> a[m]
 616   L02015:  ........11  -> L02000                   if no carry go to err21
 617   L02016:  1.11..111.                              shift right a[w]
 618   L02017:  .1.111111.                              c - 1 -> c[s]
 619   L02020:  ........11  -> L02000                   if no carry go to err21
 620   L02021:  .11111111.                      ln25:   c + 1 -> c[s]
 621   L02022:  .1..1.111.                      ln26:   a -> b[w]
 622   L02023:  1..1.11..1  -> L02226                   jsb eca22
 623   L02024:  11.11...1.                              a - 1 -> a[p]
 624   L02025:  ...1...111  -> L02021                   if no carry go to ln25
 625   L02026:  11..11..1.                              a exchange b[wp]
 626   L02027:  111..1111.                              a + b -> a[s]
 627   L02030:  .......111  -> L02001                   if no carry go to ln24
 628   L02031:  .111..11..                              7 -> p
 629   L02032:  .11.11.1.1  -> L02155                   jsb pqo23
 630   L02033:  1.....11..                              8 -> p
 631   L02034:  1..111.1.1  -> L02235                   jsb pmu22
 632   L02035:  1..1..11..                              9 -> p
 633   L02036:  1..111...1  -> L02234                   jsb pmu21
 634   L02037:  1111111..1  -> L02376                   jsb lncd3
 635   L02040:  1.1...11..                              10 -> p
 636   L02041:  1..111...1  -> L02234                   jsb pmu21
 637   L02042:  .11111.1.1  -> L02175                   jsb lncd2
 638   L02043:  1.11..11..                              11 -> p
 639   L02044:  1..111...1  -> L02234                   jsb pmu21
 640   L02045:  11.11111.1  -> L02337                   jsb lncd1
 641   L02046:  1..111...1  -> L02234                   jsb pmu21
 642   L02047:  1.111..1.1  -> L02271                   jsb lnc2
 643   L02050:  1..111...1  -> L02234                   jsb pmu21
 644   L02051:  1111.11..1  -> L02366                   jsb lnc10
 645   L02052:  111.1.111.                              a exchange c[w]
 646   L02053:  .1.1..111.                              a - c -> c[w]
 647   L02054:  .....11.1.                              if b[xs] = 0
 648   L02055:  ..1.111111  -> L02057                        then go to ln27
 649   L02056:  .1.1..111.                              a - c -> c[w]
 650   L02057:  11..1.111.                      ln27:   a exchange b[w]
 651   L02060:  .....111..                      ln28:   p - 1 -> p
 652   L02061:  .1....111.                              shift left a[w]
 653   L02062:  ...11.11..                              if p # 1
 654   L02063:  ..11....11  -> L02060                        then go to ln28
 655   L02064:  111.1.111.                              a exchange c[w]
 656   L02065:  .11.11111.                              if c[s] = 0
 657   L02066:  ..111...11  -> L02070                        then go to ln29
 658   L02067:  ..111..11.                              0 - c - 1 -> c[m]
 659   L02070:  .1111.1.1.                      ln29:   c + 1 -> c[x]
 660   L02071:  1.11..11..                              11 -> p
 661   L02072:  11...1.1.1  -> L02305                   jsb mpy27
 662   L02073:  1..1.1.1..                              if s9 # 1
 663   L02074:  .....11.11  -> L02006                        then go to xty22
 664   L02075:  .1.1.1.1..                              if s5 # 1
 665   L02076:  1..1.1..11  -> L02224                        then go to rtn21
 666   L02077:  1111.11..1  -> L02366                   jsb lnc10
 667   L02100:  1.1..111.1  -> L02247                   jsb mpy22
 668   L02101:  1..1.1..11  -> L02224                   go to rtn21
 669                                            
 670   L02102:  1111.11..1  -> L02366           exp21:  jsb lnc10
 671   L02103:  111.11...1  -> L02354                   jsb pre21
 672   L02104:  1.111..1.1  -> L02271                   jsb lnc2
 673   L02105:  1.11..11..                              11 -> p
 674   L02106:  1..11.11.1  -> L02233                   jsb pqo21
 675   L02107:  11.11111.1  -> L02337                   jsb lncd1
 676   L02110:  1.1...11..                              10 -> p
 677   L02111:  1..11.11.1  -> L02233                   jsb pqo21
 678   L02112:  .11111.1.1  -> L02175                   jsb lncd2
 679   L02113:  1..1..11..                              9 -> p
 680   L02114:  1..11.11.1  -> L02233                   jsb pqo21
 681   L02115:  1111111..1  -> L02376                   jsb lncd3
 682   L02116:  1.....11..                              8 -> p
 683   L02117:  1..11.11.1  -> L02233                   jsb pqo21
 684   L02120:  1..11.11.1  -> L02233                   jsb pqo21
 685   L02121:  1..11.11.1  -> L02233                   jsb pqo21
 686   L02122:  .11...11..                              6 -> p
 687   L02123:  1.1111..1.                              0 -> a[wp]
 688   L02124:  11.1..11..                              13 -> p
 689   L02125:  1...1.111.                              b exchange c[w]
 690   L02126:  111.1.111.                              a exchange c[w]
 691   L02127:  .11..11...                              load constant 6
 692   L02130:  1...111.11  -> L02216                   go to exp23
 693                                            
 694   L02131:  ..1..1.1..                      pre23:  if s2 # 1
 695   L02132:  .1.1111.11  -> L02136                        then go to pre24
 696   L02133:  11111.1.1.                              a + 1 -> a[x]
 697   L02134:  1..1111.1.                      pre29:  if a[xs] >= 1
 698   L02135:  11....1.11  -> L02302                        then go to pre27
 699   L02136:  11...1.11.                      pre24:  a - b -> a[ms]
 700   L02137:  .1.11..111  -> L02131                   if no carry go to pre23
 701   L02140:  111..1.11.                              a + b -> a[ms]
 702   L02141:  .1....111.                              shift left a[w]
 703   L02142:  .1.11.1.1.                              c - 1 -> c[x]
 704   L02143:  .1.111..11  -> L02134                   if no carry go to pre29
 705   L02144:  1.11..111.                      pre25:  shift right a[w]
 706   L02145:  ..11.1..1.                              0 -> c[wp]
 707   L02146:  111.1.1.1.                              a exchange c[x]
 708   L02147:  .11.11111.                      pre26:  if c[s] = 0
 709   L02150:  .11.11..11  -> L02154                        then go to pre28
 710   L02151:  11..1.111.                              a exchange b[w]
 711   L02152:  11....111.                              a - b -> a[w]
 712   L02153:  ..111.111.                              0 - c - 1 -> c[w]
 713   L02154:  1.11..111.                      pre28:  shift right a[w]
 714   L02155:  1...1.111.                      pqo23:  b exchange c[w]
 715   L02156:  ..11..111.                              0 -> c[w]
 716   L02157:  .1.11..11.                              c - 1 -> c[m]
 717   L02160:  ..1..1.1..                              if s2 # 1
 718   L02161:  .111.11.11  -> L02166                        then go to pqo28
 719   L02162:  .1...11...                              load constant 4
 720   L02163:  .1111..11.                              c + 1 -> c[m]
 721   L02164:  .1111..111  -> L02171                   if no carry go to pqo24
 722   L02165:  .11..11...                      pqo27:  load constant 6
 723   L02166:  ...11.11..                      pqo28:  if p # 1
 724   L02167:  .111.1.111  -> L02165                        then go to pqo27
 725   L02170:  1..1..111.                              shift right c[w]
 726   L02171:  1..1..111.                      pqo24:  shift right c[w]
 727   L02172:  ..1..1.1..                      nrm26:  if s2 # 1
 728   L02173:  1..1.1..11  -> L02224                        then go to rtn21
 729   L02174:  ....11....                              return
 730                                            
 731   L02175:  .111..11..                      lncd2:  7 -> p
 732   L02176:  ..11.11...                      lnc6:   load constant 3
 733   L02177:  ..11.11...                              load constant 3
 734   L02200:  .....11...                              load constant 0
 735   L02201:  1....11...                      lnc7:   load constant 8
 736   L02202:  .1.1.11...                              load constant 5
 737   L02203:  .....11...                              load constant 0
 738   L02204:  1..1.11...                              load constant 9
 739   L02205:  111.1.1.11  -> L02352                   go to lnc9
 740                                            
 741   L02206:  1..1.11..1  -> L02226           exp29:  jsb eca22
 742   L02207:  11111...1.                              a + 1 -> a[p]
 743   L02210:  .1..1.111.                      exp22:  a -> b[w]
 744   L02211:  .1.111111.                              c - 1 -> c[s]
 745   L02212:  1....11.11  -> L02206                   if no carry go to exp29
 746   L02213:  1.11.1..1.                              shift right a[wp]
 747   L02214:  111.1.111.                              a exchange c[w]
 748   L02215:  .1...1.11.                              shift left a[ms]
 749   L02216:  111.1.111.                      exp23:  a exchange c[w]
 750   L02217:  11.111111.                              a - 1 -> a[s]
 751   L02220:  1...1...11  -> L02210                   if no carry go to exp22
 752   L02221:  11..1.111.                              a exchange b[w]
 753   L02222:  11111...1.                              a + 1 -> a[p]
 754   L02223:  11..11...1  -> L02314                   jsb nrm21
 755   L02224:  ..1..1....  -> L01225  *****    rtn21:  select rom 1
 756                                            
 757   L02225:  1.11.1..1.                      eca21:  shift right a[wp]
 758   L02226:  11.111111.                      eca22:  a - 1 -> a[s]
 759   L02227:  1..1.1.111  -> L02225                   if no carry go to eca21
 760   L02230:  1.1111111.                              0 -> a[s]
 761   L02231:  111...111.                              a + b -> a[w]
 762   L02232:  ....11....                              return
 763                                            
 764   L02233:  ..1..1....  -> L01234  *****    pqo21:  select rom 1
 765                                            
 766   L02234:  1.11..111.                      pmu21:  shift right a[w]
 767   L02235:  1...1.111.                      pmu22:  b exchange c[w]
 768   L02236:  1.1.....11  -> L02240                   go to pmu24
 769                                            
 770   L02237:  111...111.                      pmu23:  a + b -> a[w]
 771   L02240:  .1.111111.                      pmu24:  c - 1 -> c[s]
 772   L02241:  1..1111111  -> L02237                   if no carry go to pmu23
 773   L02242:  111.1.111.                              a exchange c[w]
 774   L02243:  .1...1.11.                              shift left a[ms]
 775   L02244:  111.1.111.                              a exchange c[w]
 776   L02245:  .11.11.111  -> L02155                   go to pqo23
 777                                            
 778   L02246:  ..11..11..                      mpy21:  3 -> p
 779   L02247:  .111..1.1.                      mpy22:  a + c -> c[x]
 780   L02250:  .1.1.1111.                      div21:  a - c -> c[s]
 781   L02251:  1.1.1.1111  -> L02253                   if no carry go to div22
 782   L02252:  ..1.11111.                              0 - c -> c[s]
 783   L02253:  11..1..11.                      div22:  a exchange b[m]
 784   L02254:  1.111.111.                              0 -> a[w]
 785   L02255:  11..1.11..                              if p # 12
 786   L02256:  11...1.111  -> L02305                        then go to mpy27
 787   L02257:  ...11..11.                              if c[m] >= 1
 788   L02260:  1.11.11.11  -> L02266                        then go to div23
 789   L02261:  ...1.1.1..                              if s1 # 1
 790   L02262:  ........11  -> L02000                        then go to err21
 791   L02263:  1.1..1....  -> L05264  *****            select rom 5
 792   L02264:  11.11.1111  -> L02333                   go to nrm25
 793                                            
 794   L02265:  ..........                              no operation
 795                                            
 796   L02266:  1...11..1.                      div23:  b exchange c[wp]
 797   L02267:  111.1..11.                              a exchange c[m]
 798   L02270:  ..1..1....  -> L01271  *****            select rom 1
 799                                            
 800   L02271:  1...1..1..                      lnc2:   0 -> s8
 801   L02272:  .11..11...                              load constant 6
 802   L02273:  1..1.11...                              load constant 9
 803   L02274:  ..11.11...                              load constant 3
 804   L02275:  ...1.11...                              load constant 1
 805   L02276:  .1...11...                              load constant 4
 806   L02277:  .111.11...                              load constant 7
 807   L02300:  ...1.11...                              load constant 1
 808   L02301:  111..11.11  -> L02346                   go to lnc8
 809                                            
 810   L02302:  11111..11.                      pre27:  a + 1 -> a[m]
 811   L02303:  .11..1..11  -> L02144                   if no carry go to pre25
 812   L02304:  111...111.                      mpy26:  a + b -> a[w]
 813   L02305:  .1.11...1.                      mpy27:  c - 1 -> c[p]
 814   L02306:  11...1..11  -> L02304                   if no carry go to mpy26
 815   L02307:  1.11..111.                      mpy28:  shift right a[w]
 816   L02310:  ....1111..                              p + 1 -> p
 817   L02311:  11.11.11..                              if p # 13
 818   L02312:  11...1.111  -> L02305                        then go to mpy27
 819   L02313:  .1111.1.1.                      nrm20:  c + 1 -> c[x]
 820   L02314:  1.1111111.                      nrm21:  0 -> a[s]
 821   L02315:  11....11..                              12 -> p
 822   L02316:  ....1.111.                              0 -> b[w]
 823   L02317:  1..11...1.                      nrm23:  if a[p] >= 1
 824   L02320:  11.1.11.11  -> L02326                        then go to nrm24
 825   L02321:  .1....111.                              shift left a[w]
 826   L02322:  .1.11.1.1.                              c - 1 -> c[x]
 827   L02323:  1..11.111.                              if a[w] >= 1
 828   L02324:  11..111111  -> L02317                        then go to nrm23
 829   L02325:  ..11..111.                              0 -> c[w]
 830   L02326:  .1..1.1.1.                      nrm24:  a -> b[x]
 831   L02327:  111...111.                              a + b -> a[w]
 832   L02330:  1..111111.                              if a[s] >= 1
 833   L02331:  11...11111  -> L02307                        then go to mpy28
 834   L02332:  111.1..11.                              a exchange c[m]
 835   L02333:  .11...111.                      nrm25:  c -> a[w]
 836   L02334:  ....1.111.                              0 -> b[w]
 837   L02335:  11....11..                      nrm27:  12 -> p
 838   L02336:  .1111.1.11  -> L02172                   go to nrm26
 839                                            
 840   L02337:  1..1..11..                      lncd1:  9 -> p
 841   L02340:  ..11.11...                              load constant 3
 842   L02341:  ...1.11...                              load constant 1
 843   L02342:  .....11...                              load constant 0
 844   L02343:  ...1.11...                              load constant 1
 845   L02344:  .111.11...                              load constant 7
 846   L02345:  1..1.11...                              load constant 9
 847   L02346:  1....11...                      lnc8:   load constant 8
 848   L02347:  .....11...                              load constant 0
 849   L02350:  .1.1.11...                              load constant 5
 850   L02351:  .1.1.11...                              load constant 5
 851   L02352:  ..11.11...                      lnc9:   load constant 3
 852   L02353:  11.111.111  -> L02335                   go to nrm27
 853                                            
 854   L02354:  111.1.111.                      pre21:  a exchange c[w]
 855   L02355:  .1..1.111.                              a -> b[w]
 856   L02356:  .11....11.                              c -> a[m]
 857   L02357:  1.1.111.1.                              c + c -> c[xs]
 858   L02360:  .1.1111.11  -> L02136                   if no carry go to pre24
 859   L02361:  .111111.1.                              c + 1 -> c[xs]
 860   L02362:  1.11..111.                      pre22:  shift right a[w]
 861   L02363:  .1111.1.1.                              c + 1 -> c[x]
 862   L02364:  1111..1.11  -> L02362                   if no carry go to pre22
 863   L02365:  .11..11111  -> L02147                   go to pre26
 864                                            
 865   L02366:  ..11..111.                      lnc10:  0 -> c[w]
 866   L02367:  11....11..                              12 -> p
 867   L02370:  ..1..11...                              load constant 2
 868   L02371:  ..11.11...                              load constant 3
 869   L02372:  .....11...                              load constant 0
 870   L02373:  ..1..11...                              load constant 2
 871   L02374:  .1.1.11...                              load constant 5
 872   L02375:  1......111  -> L02201                   go to lnc7
 873                                            
 874   L02376:  .1.1..11..                      lncd3:  5 -> p
 875   L02377:  .111111.11  -> L02176                   go to lnc6
 876                                            
00250 div21 780
00253 div22 783
00266 div23 796
00225 eca21 757
00226 eca22 758
00000 err21 601
00102 exp21 670
00210 exp22 743
00216 exp23 749
00206 exp29 741
00013 ln22 614
00001 ln24 602
00021 ln25 620
00022 ln26 621
00057 ln27 650
00060 ln28 651
00070 ln29 659
00366 lnc10 865
00271 lnc2 800
00176 lnc6 732
00201 lnc7 735
00346 lnc8 847
00352 lnc9 851
00337 lncd1 840
00175 lncd2 731
00376 lncd3 874
00246 mpy21 778
00247 mpy22 779
00304 mpy26 812
00305 mpy27 813
00307 mpy28 815
00313 nrm20 819
00314 nrm21 820
00317 nrm23 823
00326 nrm24 830
00333 nrm25 835
00172 nrm26 727
00335 nrm27 837
00234 pmu21 766
00235 pmu22 767
00237 pmu23 770
00240 pmu24 771
00233 pqo21 764
00155 pqo23 714
00171 pqo24 726
00165 pqo27 722
00166 pqo28 723
00354 pre21 854
00362 pre22 860
00131 pre23 694
00136 pre24 699
00144 pre25 705
00147 pre26 708
00302 pre27 810
00154 pre28 713
00134 pre29 697
00224 rtn21 755
00010 xty21 611
00006 xty22 608
 878                                            
 879                                                    .rom @03
 880                                            
 881   L03000:  1....1....  -> L04001  *****    prfx:   select rom 4            ; unsure of label
 882                                            
 883   L03001:  ..........                              no operation
 884                                            
 885   L03002:  .1..1.1.11  -> L03112           fix1:   go to fix2
 886                                            
 887   L03003:  .1.11..111  -> L03131           exp0:   go to exp1              ; unsure of label
 888                                            
 889   L03004:  .1.11.1.11  -> L03132           lnnn:   go to lnn2z4            ; unsure of label
 890                                            
 891   L03005:  ..........                              no operation
 892   L03006:  .1...1..11  -> L03104           invx:   go to inv1
 893                                            
 894   L03007:  .1...1....  -> L02010  *****    lexx:   select rom 2
 895                                            
 896   L03010:  1....1....  -> L04011  *****    perc:   select rom 4
 897                                            
 898   L03011:  11...1....  -> L06012  *****    rnd0:   select rom 6
 899                                            
 900   L03012:  .11..11.11  -> L03146           rcal:   go to rcl0              ; unsure of label
 901                                            
 902   L03013:  .11.1...11  -> L03150           stor:   go to str0
 903                                            
 904   L03014:  11..1.1...                      rold:   down rotate
 905   L03015:  .111111111  -> L03177                   go to fst1zx
 906                                            
 907   L03016:  .11.1.1...                      exc1:   stack -> a
 908   L03017:  .1..1.1...                              c -> stack
 909   L03020:  .111111.11  -> L03176                   go to fstxzj
 910                                            
 911   L03021:  ..11111111  -> L03077           fst2z5: go to ent2
 912                                            
 913   L03022:  11111.111.                      dig6:   a + 1 -> a[w]
 914   L03023:  11111.111.                      dig5:   a + 1 -> a[w]
 915   L03024:  11111.111.                      dig4:   a + 1 -> a[w]
 916   L03025:  ...11.1.11  -> L03032                   if no carry go to dig3
 917                                            
 918   L03026:  1....1....  -> L04027  *****    addd:   select rom 4
 919                                            
 920   L03027:  1....111.1  -> L03207           fix3:   jsb dsp0z4
 921   L03030:  .1....111.                              shift left a[w]
 922   L03031:  .1.1..1.11  -> L03122                   go to fmt1
 923                                            
 924   L03032:  11111.111.                      dig3:   a + 1 -> a[w]
 925   L03033:  11111.111.                      dig2:   a + 1 -> a[w]
 926   L03034:  11111.111.                      dig1:   a + 1 -> a[w]
 927   L03035:  ....11....                              return
 928                                            
 929   L03036:  1....1....  -> L04037  *****    mult:   select rom 4
 930                                            
 931   L03037:  ..11.1....                      tkra:   keys -> rom address
 932                                            
 933   L03040:  1...1..1..                      sig1:   0 -> s8
 934   L03041:  1....1....  -> L04042  *****            select rom 4
 935                                            
 936   L03042:  ..1.....11  -> L03040           sigp:   go to sig1
 937                                            
 938   L03043:  ..11..11..                      dcpt:   3 -> p
 939   L03044:  ....11....                      dig0:   return
 940                                            
 941   L03045:  1....1....  -> L04046  *****    dvid:   select rom 4
 942                                            
 943   L03046:  ..1..1.111  -> L03045           divd:   go to dvid
 944                                            
 945   L03047:  .1.1...1..                      tan2:   1 -> s5
 946   L03050:  .11..1...1  -> L03144           tang:   jsb sav9
 947   L03051:  .1....1.11  -> L03102                   go to sqt1z4
 948                                            
 949   L03052:  .1..11..11  -> L03114           coss:   go to cos2
 950                                            
 951   L03053:  ..1..11111  -> L03047           sinn:   go to tan2
 952                                            
 953   L03054:  1....1....  -> L04055  *****    tpol:   select rom 4
 954                                            
 955   L03055:  ..........                              no operation
 956                                            
 957   L03056:  .11....1.1  -> L03141           sqar:   jsb save
 958   L03057:  .1..1...11  -> L03110                   go to mul0
 959                                            
 960   L03060:  ..........                              no operation
 961                                            
 962   L03061:  .....1....  -> L00062  *****    sqt2:   select rom 0
 963                                            
 964   L03062:  11111.111.                      dig9:   a + 1 -> a[w]
 965   L03063:  11111.111.                      dig8:   a + 1 -> a[w]
 966   L03064:  11111.111.                      dig7:   a + 1 -> a[w]
 967   L03065:  ...1..1.11  -> L03022                   if no carry go to dig6
 968                                            
 969   L03066:  1....1....  -> L04067  *****    subt:   select rom 4
 970                                            
 971   L03067:  ..........                              no operation
 972                                            
 973   L03070:  1.1..11..1  -> L03246           clrx:   jsb ofl2
 974   L03071:  1......111  -> L03201                   go to fst2zx
 975                                            
 976   L03072:  1.111.1111  -> L03273           eexx:   go to eex2
 977                                            
 978   L03073:  11.....111  -> L03301           chs1:   go to chs2
 979                                            
 980   L03074:  ....1.111.                      clok:   0 -> b[w]
 981   L03075:  111..1....  -> L07076  *****            select rom 7
 982                                            
 983   L03076:  .1..1.1...                      ent1:   c -> stack
 984   L03077:  1.1..111.1  -> L03247           ent2:   jsb ofl3
 985   L03100:  1......111  -> L03201                   go to fst2zx
 986                                            
 987   L03101:  .11....1.1  -> L03141           sqt0:   jsb save
 988   L03102:  1..11..1..                      sqt1z4: 0 -> s9
 989   L03103:  ..11...111  -> L03061           sqt1:   go to sqt2
 990                                            
 991   L03104:  .11....1.1  -> L03141           inv1:   jsb save
 992   L03105:  1.111.111.                              0 -> a[w]
 993   L03106:  11111...1.                              a + 1 -> a[p]
 994   L03107:  .1..1..111  -> L03111                   if no carry go to div0
 995   L03110:  1....1....  -> L04111  *****    mul0:   select rom 4
 996                                            
 997   L03111:  1....1....  -> L04112  *****    div0:   select rom 4
 998                                            
 999   L03112:  1..11..1..                      fix2:   0 -> s9
1000   L03113:  ...1.11111  -> L03027                   go to fix3
1001                                            
1002   L03114:  .11..1...1  -> L03144           cos2:   jsb sav9
1003   L03115:  1..1...1..                      cos2z4: 1 -> s9
1004   L03116:  .1.1...1..                      trecz4: 1 -> s5
1005   L03117:  ..11...111  -> L03061                   go to sqt2
1006                                            
1007   L03120:  .1....111.                      frmt:   shift left a[w]
1008   L03121:  11111.111.                              a + 1 -> a[w]
1009   L03122:  .1....111.                      fmt1:   shift left a[w]
1010   L03123:  ..1.1.1...                              c exchange m
1011   L03124:  111.1.1.1.                              a exchange c[x]
1012   L03125:  ..1.1.1...                              c exchange m
1013   L03126:  .111..1.11  -> L03162           fstpz4: go to fstp
1014                                            
1015   L03127:  ..........                              no operation
1016   L03130:  ..........                              no operation
1017                                            
1018   L03131:  1...1..1..                      exp1:   0 -> s8
1019   L03132:  1..1...1..                      lnn2z4: 1 -> s9
1020   L03133:  .11....1.1  -> L03141                   jsb save
1021   L03134:  ..1....1..                      nty1z4: 1 -> s2
1022   L03135:  .....11111  -> L03007                   go to lexx
1023                                            
1024   L03136:  1....111.1  -> L03207           sci2z4: jsb dsp0z4
1025   L03137:  .1.1....11  -> L03120                   go to frmt
1026                                            
1027   L03140:  ..11...1..                      sav1:   1 -> s3
1028   L03141:  1.1.1..1..                      save:   0 -> s10
1029   L03142:  11...1....  -> L06143  *****            select rom 6
1030                                            
1031   L03143:  11...1....  -> L06144  *****    sav2:   select rom 6
1032                                            
1033   L03144:  ...1...1..                      sav9:   1 -> s1
1034   L03145:  .11....111  -> L03141                   go to save
1035                                            
1036   L03146:  1..1...1..                      rcl0:   1 -> s9
1037   L03147:  .11.1..111  -> L03151                   go to str1
1038                                            
1039   L03150:  1..11..1..                      str0:   0 -> s9
1040   L03151:  ..1....1..                      str1:   1 -> s2
1041   L03152:  1....111.1  -> L03207                   jsb dsp0z4
1042   L03153:  .111.1.1.1  -> L03165                   jsb chk0
1043   L03154:  .11...11.1  -> L03143                   jsb sav2
1044   L03155:  1..1.1.1..                              if s9 # 1
1045   L03156:  .111...111  -> L03161                        then go to str2
1046   L03157:  1111.11..1  -> L03366                   jsb fst4
1047   L03160:  .111111.11  -> L03176                   go to fstxzj
1048                                            
1049   L03161:  1.1111....                      str2:   c -> data
1050   L03162:  .111.1.1..                      fstp:   if s7 # 1
1051   L03163:  ..11111111  -> L03077                        then go to ent2
1052   L03164:  .111111111  -> L03177                   go to fst1zx
1053                                            
1054   L03165:  ......11..                      chk0:   0 -> p
1055   L03166:  1..11...1.                              if a[p] >= 1
1056   L03167:  1111111111  -> L03377                        then go to retnzx
1057   L03170:  .111..1.11  -> L03162           fstpz5: go to fstp
1058                                            
1059   L03171:  1....111.1  -> L03207           asmdz4: jsb dsp0z4
1060   L03172:  .111.1.1.1  -> L03165                   jsb chk0
1061   L03173:  1....1....  -> L04174  *****            select rom 4
1062                                            
1063   L03174:  ..........                              no operation
1064   L03175:  ..........                              no operation
1065                                            
1066   L03176:  111.1.111.                      fstxzj: a exchange c[w]
1067   L03177:  1.1..111.1  -> L03247           fst1zx: jsb ofl3
1068   L03200:  .111...1..                      fst1zj: 1 -> s7
1069   L03201:  1....1.1.1  -> L03205           fst2zx: jsb dsp1
1070   L03202:  1111.1.1.1  -> L03365                   jsb fst3
1071   L03203:  11.1.11.11  -> L03326                   go to den2
1072                                            
1073   L03204:  ..1111111.                      chs3:   0 - c - 1 -> c[s]
1074   L03205:  1.1.1..1..                      dsp1:   0 -> s10
1075   L03206:  1...1...11  -> L03210                   go to dsp7
1076   L03207:  1.11..111.                      dsp0z4: shift right a[w]
1077   L03210:  .11..1111.                      dsp7:   c -> a[s]
1078   L03211:  1...1..1..                              0 -> s8
1079   L03212:  1..1.1..11  -> L03224                   go to dsp8
1080   L03213:  .111111.1.                      dsp2:   c + 1 -> c[xs]
1081   L03214:  1......1..                      dsp3:   1 -> s8
1082   L03215:  .1.1.1.1..                              if s5 # 1
1083   L03216:  1..1..1.11  -> L03222                        then go to dsp5
1084   L03217:  .1111.1.1.                              c + 1 -> c[x]
1085   L03220:  1...1.1111  -> L03213                   if no carry go to dsp2
1086   L03221:  ....1.1...                      dsp4:   display toggle
1087   L03222:  .....1.1..                      dsp5:   if s0 # 1
1088   L03223:  1...11..11  -> L03214                        then go to dsp3
1089   L03224:  ....1..1..                      dsp8:   0 -> s0
1090   L03225:  .....111..                      dsp6:   p - 1 -> p
1091   L03226:  11..1.11..                              if p # 12
1092   L03227:  1..1.1.111  -> L03225                        then go to dsp6
1093   L03230:  1...1.1...                              display off
1094   L03231:  1....1.1..                              if s8 # 1
1095   L03232:  1..1...111  -> L03221                        then go to dsp4
1096   L03233:  .1....111.                              shift left a[w]
1097   L03234:  .1.11..1..                              0 -> s5
1098   L03235:  1.1..1.1..                              if s10 # 1
1099   L03236:  ...1111111  -> L03037                        then go to tkra
1100   L03237:  1....1....  -> L04240  *****            select rom 4
1101                                            
1102   L03240:  ..........                              no operation
1103                                            
1104   L03241:  ..11.1..1.                      ofl1:   0 -> c[wp]
1105   L03242:  .1.111..1.                              c - 1 -> c[wp]
1106   L03243:  ..11.11.1.                              0 -> c[xs]
1107   L03244:  111...1.1.                              a + b -> a[x]
1108   L03245:  1.1..11111  -> L03247                   if no carry go to ofl3
1109   L03246:  ..11..111.                      ofl2:   0 -> c[w]
1110   L03247:  ....11.1..                      ofl3:   clear status
1111   L03250:  .11...111.                              c -> a[w]
1112   L03251:  11....11..                      ofl4:   12 -> p
1113   L03252:  .1..1.1.1.                              a -> b[x]
1114   L03253:  .11...1.1.                              c -> a[x]
1115   L03254:  .11.111.1.                              if c[xs] = 0
1116   L03255:  1.11...111  -> L03261                        then go to ofl5
1117   L03256:  ..1.1.1.1.                              0 - c -> c[x]
1118   L03257:  .1.1111.1.                              c - 1 -> c[xs]
1119   L03260:  1.1....111  -> L03241                   if no carry go to ofl1
1120   L03261:  111.1.1.1.                      ofl5:   a exchange c[x]
1121   L03262:  .1...1.1..                              if s4 # 1
1122   L03263:  ....1..111  -> L03011                        then go to rnd0
1123   L03264:  11..1.1.1.                              a exchange b[x]
1124   L03265:  ....1.1.1.                              0 -> b[x]
1125   L03266:  1....1.1.1  -> L03205                   jsb dsp1
1126   L03267:  11..1.11..                              if p # 12
1127   L03270:  1....11111  -> L03207                        then go to dsp0z4
1128   L03271:  .1....1.1.                              shift left a[x]
1129   L03272:  1.11111.11  -> L03276                   go to eex3
1130   L03273:  .1.....1..                      eex2:   1 -> s4
1131   L03274:  1.11.1.1..                              if s11 # 1
1132   L03275:  ...111..11  -> L03034                        then go to dig1
1133   L03276:  1.11..111.                      eex3:   shift right a[w]
1134   L03277:  111.11..1.                              a exchange c[wp]
1135   L03300:  11...11.11  -> L03306                   go to eex4
1136                                            
1137   L03301:  1.11..111.                      chs2:   shift right a[w]
1138   L03302:  .1...1.1..                              if s4 # 1
1139   L03303:  1....1..11  -> L03204                        then go to chs3
1140   L03304:  111.11..1.                              a exchange c[wp]
1141   L03305:  ..11111.1.                              0 - c - 1 -> c[xs]
1142   L03306:  .11...111.                      eex4:   c -> a[w]
1143   L03307:  .11.111.1.                              if c[xs] = 0
1144   L03310:  11..1.1111  -> L03313                        then go to eex5
1145   L03311:  ..11.11.1.                              0 -> c[xs]
1146   L03312:  ..1.1.1.1.                              0 - c -> c[x]
1147   L03313:  11.1..11..                      eex5:   13 -> p
1148   L03314:  .1...1.11.                      eex6:   shift left a[ms]
1149   L03315:  .1.11.1.1.                              c - 1 -> c[x]
1150   L03316:  1..111111.                              if a[s] >= 1
1151   L03317:  111.11..11  -> L03354                        then go to eex8
1152   L03320:  1..111.11.                              if a[ms] >= 1
1153   L03321:  11..11..11  -> L03314                        then go to eex6
1154   L03322:  ..11..1.1.                              0 -> c[x]
1155   L03323:  1....1.1.1  -> L03205           den1:   jsb dsp1
1156   L03324:  1.11.1.11.                              shift right a[ms]
1157   L03325:  .11..1111.                      den7:   c -> a[s]
1158   L03326:  11..1.11..                      den2:   if p # 12
1159   L03327:  11.1111111  -> L03337                        then go to den4
1160   L03330:  ..1...111.                              b -> c[w]
1161   L03331:  .1111.111.                              c + 1 -> c[w]
1162   L03332:  ...1..11..                              1 -> p
1163   L03333:  .1...1..1.                      den3:   shift left a[wp]
1164   L03334:  ....1111..                              p + 1 -> p
1165   L03335:  .11.1...1.                              if c[p] = 0
1166   L03336:  11.11.1111  -> L03333                        then go to den3
1167   L03337:  111.1.111.                      den4:   a exchange c[w]
1168   L03340:  ..111.11..                              if p # 3
1169   L03341:  111..1.111  -> L03345                        then go to den5
1170   L03342:  ..11..1.1.                              0 -> c[x]
1171   L03343:  .11....1..                              1 -> s6
1172   L03344:  11...11.11  -> L03306                   go to eex4
1173                                            
1174   L03345:  .11..1.1..                      den5:   if s6 # 1
1175   L03346:  111.1...11  -> L03350                        then go to den6
1176   L03347:  .....111..                              p - 1 -> p
1177   L03350:  1.1..1..1.                      den6:   shift right b[wp]
1178   L03351:  11...11..1  -> L03306                   jsb eex4
1179   L03352:  .....111..                      eex7:   p - 1 -> p
1180   L03353:  .1111.1.1.                              c + 1 -> c[x]
1181   L03354:  ........1.                      eex8:   if b[p] = 0
1182   L03355:  111.1.1.11  -> L03352                        then go to eex7
1183   L03356:  1.11...1..                              1 -> s11
1184   L03357:  1.11.1.11.                              shift right a[ms]
1185   L03360:  111.1..11.                              a exchange c[m]
1186   L03361:  .1...1.1..                              if s4 # 1
1187   L03362:  11.1..1111  -> L03323                        then go to den1
1188   L03363:  1.1.1..1.1  -> L03251           eex9:   jsb ofl4
1189   L03364:  1......111  -> L03201                   go to fst2zx
1190                                            
1191   L03365:  1.1111.11.                      fst3:   0 -> a[ms]
1192   L03366:  .111.1.1..                      fst4:   if s7 # 1
1193   L03367:  11111..111  -> L03371                        then go to fst5
1194   L03370:  .1..1.1...                              c -> stack
1195   L03371:  .111...1..                      fst5:   1 -> s7
1196   L03372:  ..11..111.                              0 -> c[w]
1197   L03373:  .1.11.111.                              c - 1 -> c[w]
1198   L03374:  ..1.11111.                              0 - c -> c[s]
1199   L03375:  .11111111.                              c + 1 -> c[s]
1200   L03376:  1...1.111.                              b exchange c[w]
1201   L03377:  ....11....                      retnzx: return
1202                                            
00026 addd 918
00171 asmdz4 1059
00165 chk0 1054
00073 chs1 978
00301 chs2 1137
00204 chs3 1073
00074 clok 980
00070 clrx 973
00114 cos2 1002
00115 cos2z4 1003
00052 coss 949
00043 dcpt 938
00323 den1 1155
00326 den2 1158
00333 den3 1163
00337 den4 1167
00345 den5 1174
00350 den6 1177
00325 den7 1157
00044 dig0 939
00034 dig1 926
00033 dig2 925
00032 dig3 924
00024 dig4 915
00023 dig5 914
00022 dig6 913
00064 dig7 966
00063 dig8 965
00062 dig9 964
00111 div0 997
00046 divd 943
00207 dsp0z4 1076
00205 dsp1 1074
00213 dsp2 1080
00214 dsp3 1081
00221 dsp4 1086
00222 dsp5 1087
00225 dsp6 1090
00210 dsp7 1077
00224 dsp8 1089
00045 dvid 941
00273 eex2 1130
00276 eex3 1133
00306 eex4 1142
00313 eex5 1147
00314 eex6 1148
00352 eex7 1179
00354 eex8 1181
00363 eex9 1188
00072 eexx 976
00076 ent1 983
00077 ent2 984
00016 exc1 907
00003 exp0 887
00131 exp1 1018
00002 fix1 885
00112 fix2 999
00027 fix3 920
00122 fmt1 1009
00120 frmt 1007
00200 fst1zj 1068
00177 fst1zx 1067
00021 fst2z5 911
00201 fst2zx 1069
00365 fst3 1191
00366 fst4 1192
00371 fst5 1195
00162 fstp 1050
00126 fstpz4 1013
00170 fstpz5 1057
00176 fstxzj 1066
00104 inv1 991
00006 invx 892
00007 lexx 894
00132 lnn2z4 1019
00004 lnnn 889
00110 mul0 995
00036 mult 929
00134 nty1z4 1021
00241 ofl1 1104
00246 ofl2 1109
00247 ofl3 1110
00251 ofl4 1112
00261 ofl5 1120
00010 perc 896
00000 prfx 881
00012 rcal 900
00146 rcl0 1036
00377 retnzx 1201
00011 rnd0 898
00014 rold 904
00140 sav1 1027
00143 sav2 1031
00144 sav9 1033
00141 save 1028
00136 sci2z4 1024
00040 sig1 933
00042 sigp 936
00053 sinn 951
00056 sqar 957
00101 sqt0 987
00103 sqt1 989
00102 sqt1z4 988
00061 sqt2 962
00013 stor 902
00150 str0 1039
00151 str1 1040
00161 str2 1049
00066 subt 969
00047 tan2 945
00050 tang 946
00037 tkra 931
00054 tpol 953
00116 trecz4 1004
1204                                            
1205                                                    .rom @04
1206                                            
1207   L04000:  ..........                      prfx:   no operation
1208   L04001:  1....1..11  -> L04204           prfxz3: go to pfx1
1209                                            
1210   L04002:  .1.111..11  -> L04134           sci1:   go to sci2
1211                                            
1212   L04003:  11..1...11  -> L04310           tenx:   go to tnx2
1213                                            
1214   L04004:  .1.11...11  -> L04130           logg:   go to log2
1215                                            
1216   L04005:  11...1....  -> L06006  *****    tnx3:   select rom 6
1217                                            
1218   L04006:  .11....1.1  -> L04141           xtoy:   jsb save
1219   L04007:  .1.11.1.11  -> L04132                   go to xty1
1220                                            
1221   L04010:  1..11...11  -> L04230           dpct:   go to dpc1
1222                                            
1223   L04011:  .1....1.11  -> L04102           percz3: go to pct1
1224                                            
1225   L04012:  1...1..1..                      dmst:   0 -> s8
1226   L04013:  ...1....11  -> L04020           tdms:   go to tdm1
1227                                            
1228   L04014:  ..1.....11  -> L04040           stdd:   go to std1
1229                                            
1230   L04015:  .....1....  -> L00016  *****    dmsd:   select rom 0
1231                                            
1232   L04016:  .11....1.1  -> L04141           fact:   jsb save
1233   L04017:  1111111111  -> L04377                   go to fac2
1234                                            
1235   L04020:  .11....1.1  -> L04141           tdm1:   jsb save
1236   L04021:  ....11.111  -> L04015                   go to dmsd
1237                                            
1238   L04022:  1.....1.11  -> L04202           dig6:   go to dsp0
1239   L04023:  1.....1.11  -> L04202           dig5:   go to dsp0
1240   L04024:  1.....1.11  -> L04202           dig4:   go to dsp0
1241                                            
1242   L04025:  1.1..1....  -> L05026  *****    sig2:   select rom 5
1243                                            
1244   L04026:  ..........                      addd:   no operation
1245   L04027:  .11.1...11  -> L04150           adddz3: go to amd1
1246                                            
1247   L04030:  1.11.1.111  -> L04265           tpolz0: go to tpl3
1248                                            
1249   L04031:  ..........                              no operation
1250                                            
1251   L04032:  1.....1.11  -> L04202           dig3:   go to dsp0
1252   L04033:  1.....1.11  -> L04202           dig2:   go to dsp0
1253   L04034:  1.....1.11  -> L04202           dig1:   go to dsp0
1254                                            
1255   L04035:  ..........                              no operation
1256                                            
1257   L04036:  ..........                      mult:   no operation
1258   L04037:  .11.111.11  -> L04156           multz3: go to amd4
1259                                            
1260   L04040:  .11......1  -> L04140           std1:   jsb sav1
1261   L04041:  1.1..1....  -> L05042  *****            select rom 5
1262                                            
1263   L04042:  11.1....11  -> L04320           sigmz3: go to sgma
1264                                            
1265   L04043:  .111..1.11  -> L04162           dspt:   go to piii
1266                                            
1267   L04044:  .111...111  -> L04161           dig0:   go to cons
1268   L04045:  ..........                              no operation
1269                                            
1270   L04046:  .111..1111  -> L04163           divdz3: go to amd5
1271                                            
1272   L04047:  .1.1...1..                      atn2:   1 -> s5
1273   L04050:  .1.1111..1  -> L04136           atan:   jsb sav9
1274   L04051:  .1.....111  -> L04101                   go to sqt1
1275                                            
1276   L04052:  .1..1.1111  -> L04113           acos:   go to acs1
1277                                            
1278   L04053:  ..1..11111  -> L04047           asin:   go to atn2
1279                                            
1280   L04054:  1..1..1111  -> L04223           trec:   go to trc1
1281                                            
1282   L04055:  1.1.1...11  -> L04250           tpolz3: go to tpl1
1283                                            
1284   L04056:  .11....1.1  -> L04141           sqrt:   jsb save
1285   L04057:  .1.....111  -> L04101                   go to sqt1
1286                                            
1287   L04060:  ..........                              no operation
1288   L04061:  ..........                              no operation
1289                                            
1290   L04062:  11111.111.                      dig9:   a + 1 -> a[w]
1291   L04063:  11111.111.                      dig8:   a + 1 -> a[w]
1292   L04064:  .111....11  -> L04160           dig7:   if no carry go to con1
1293                                            
1294   L04065:  1.1..1....  -> L05066  *****    tpl6:   select rom 5
1295                                            
1296   L04066:  ..........                      subt:   no operation
1297   L04067:  .11.1.1111  -> L04153           subtz3: go to amd2
1298                                            
1299   L04070:  .11....1.1  -> L04141           cler:   jsb save
1300   L04071:  1111.1.111  -> L04365                   go to clr2
1301                                            
1302   L04072:  11111.111.                      grad:   a + 1 -> a[w]
1303   L04073:  ..11111111  -> L04077           radn:   if no carry go to mode
1304                                            
1305   L04074:  ..........                      clok:   no operation
1306   L04075:  ..........                              no operation
1307   L04076:  11.11.111.                      degr:   a - 1 -> a[w]
1308   L04077:  ......11..                      mode:   0 -> p
1309   L04100:  .1..111.11  -> L04116                   go to shft
1310                                            
1311   L04101:  .11..1....  -> L03102  *****    sqt1:   select rom 3
1312                                            
1313   L04102:  .11......1  -> L04140           pct1:   jsb sav1
1314   L04103:  1...1..1..                              0 -> s8
1315   L04104:  11..1.1...                      c100:   down rotate
1316   L04105:  .1..1.1...                              c -> stack
1317   L04106:  .1.11.1.1.                              c - 1 -> c[x]
1318   L04107:  .1.11.1.1.                              c - 1 -> c[x]
1319   L04110:  1....1.1..                              if s8 # 1
1320   L04111:  1.1...1111  -> L04243           mul0z3:      then go to mul0
1321   L04112:  1.1....111  -> L04241           div0z3: go to div0
1322                                            
1323   L04113:  .1.1111..1  -> L04136           acs1:   jsb sav9
1324   L04114:  .11..1....  -> L03115  *****            select rom 3
1325                                            
1326   L04115:  .11..1....  -> L03116  *****    trc2:   select rom 3
1327                                            
1328   L04116:  .1....111.                      shft:   shift left a[w]
1329   L04117:  ....1111..                              p + 1 -> p
1330   L04120:  11.11.11..                              if p # 13
1331   L04121:  .1..111.11  -> L04116                        then go to shft
1332   L04122:  ..1.1.1...                      mrg0:   c exchange m
1333   L04123:  111.1...1.                              a exchange c[p]
1334   L04124:  ..1.1.1...                      mreg:   c exchange m
1335   L04125:  .11..1....  -> L03126  *****            select rom 3
1336                                            
1337   L04126:  ..........                              no operation
1338   L04127:  ..........                              no operation
1339                                            
1340   L04130:  .1.1...1..                      log2:   1 -> s5
1341   L04131:  .11..1....  -> L03132  *****            select rom 3
1342                                            
1343   L04132:  1....111.1  -> L04207           xty1:   jsb exch
1344   L04133:  .11..1....  -> L03134  *****            select rom 3
1345                                            
1346   L04134:  1.1.1..1..                      sci2:   0 -> s10
1347   L04135:  .11..1....  -> L03136  *****            select rom 3
1348                                            
1349   L04136:  ...1...1..                      sav9:   1 -> s1
1350   L04137:  .11....111  -> L04141                   go to save
1351                                            
1352   L04140:  ..11...1..                      sav1:   1 -> s3
1353   L04141:  1.1....1..                      save:   1 -> s10
1354   L04142:  11...1....  -> L06143  *****            select rom 6
1355                                            
1356   L04143:  11...1....  -> L06144  *****    savx:   select rom 6
1357                                            
1358   L04144:  11...1....  -> L06145  *****    adr9:   select rom 6
1359                                            
1360   L04145:  1.1....1..                      sav2:   1 -> s10
1361   L04146:  ..11...1..                              1 -> s3
1362   L04147:  .11...1111  -> L04143                   go to savx
1363                                            
1364   L04150:  .11....1..                      amd1:   1 -> s6
1365   L04151:  .1.....1..                              1 -> s4
1366   L04152:  .111.1.111  -> L04165                   go to amd7
1367                                            
1368   L04153:  .11.1..1..                      amd2:   0 -> s6
1369   L04154:  .1.....1..                      amd3:   1 -> s4
1370   L04155:  .111.1.111  -> L04165                   go to amd7
1371                                            
1372   L04156:  .11....1..                      amd4:   1 -> s6
1373   L04157:  .111.1..11  -> L04164                   go to amd6
1374                                            
1375   L04160:  11111.111.                      con1:   a + 1 -> a[w]
1376   L04161:  11...1....  -> L06162  *****    cons:   select rom 6
1377                                            
1378   L04162:  11...1....  -> L06163  *****    piii:   select rom 6
1379                                            
1380   L04163:  .11.1..1..                      amd5:   0 -> s6
1381   L04164:  .1..1..1..                      amd6:   0 -> s4
1382   L04165:  ..1..1.1..                      amd7:   if s2 # 1
1383   L04166:  .111111111  -> L04177                        then go to amd8
1384   L04167:  1.1.1..1..                              0 -> s10
1385   L04170:  .11..1....  -> L03171  *****            select rom 3
1386                                            
1387   L04171:  1.1.1..1..                      am13:   0 -> s10
1388   L04172:  1.1..1....  -> L05173  *****            select rom 5
1389                                            
1390   L04173:  ..........                              no operation
1391                                            
1392   L04174:  1...1.1111  -> L04213           amd9z3: go to amd9
1393                                            
1394   L04175:  ..........                              no operation
1395                                            
1396   L04176:  .11..1....  -> L03177  *****    fst1:   select rom 3
1397                                            
1398   L04177:  .11....1.1  -> L04141           amd8:   jsb save
1399   L04200:  .11.1.1...                              stack -> a
1400   L04201:  .1111..111  -> L04171                   go to am13
1401                                            
1402   L04202:  1.1.1..1..                      dsp0:   0 -> s10
1403   L04203:  1....1.111  -> L04205                   go to dspx
1404                                            
1405   L04204:  1.1....1..                      pfx1:   1 -> s10
1406   L04205:  1..11..1..                      dspx:   0 -> s9
1407   L04206:  .11..1....  -> L03207  *****            select rom 3
1408                                            
1409   L04207:  .11.1.1...                      exch:   stack -> a
1410   L04210:  .1..1.1...                      exc1:   c -> stack
1411   L04211:  111.1.111.                              a exchange c[w]
1412   L04212:  ....11....                              return
1413                                            
1414   L04213:  1..1.1.1..                      amd9:   if s9 # 1
1415   L04214:  1..1....11  -> L04220                        then go to am12
1416   L04215:  .11......1  -> L04140           am10:   jsb sav1
1417   L04216:  111.1.111.                      am11:   a exchange c[w]
1418   L04217:  .1111..111  -> L04171                   go to am13
1419                                            
1420   L04220:  .11..1.1.1  -> L04145           am12:   jsb sav2
1421   L04221:  1.1111....                              c -> data
1422   L04222:  1...111.11  -> L04216                   go to am11
1423                                            
1424   L04223:  .1.1111..1  -> L04136           trc1:   jsb sav9
1425   L04224:  .11.1.1...                              stack -> a
1426   L04225:  ..11...1..                              1 -> s3
1427   L04226:  1.1.1..1..                              0 -> s10
1428   L04227:  .1..11.111  -> L04115                   go to trc2
1429                                            
1430   L04230:  .11......1  -> L04140           dpc1:   jsb sav1
1431   L04231:  11..1.1...                              down rotate
1432   L04232:  .1..1.1...                              c -> stack
1433   L04233:  1.1..11..1  -> L04246                   jsb sub1
1434   L04234:  .1...1..11  -> L04104                   go to c100
1435                                            
1436   L04235:  ..........                              no operation
1437   L04236:  ..........                              no operation
1438                                            
1439   L04237:  1.1..1....  -> L05240  *****    rcxy:   select rom 5
1440                                            
1441   L04240:  ..11.1....                      tkraz3: keys -> rom address
1442                                            
1443   L04241:  ..111..1..                      div0:   0 -> s3
1444   L04242:  1.1..1.111  -> L04245                   go to div1
1445                                            
1446   L04243:  ..111..1..                      mul0:   0 -> s3
1447   L04244:  ..1..1....  -> L01245  *****    mul1:   select rom 1
1448                                            
1449   L04245:  ..1..1....  -> L01246  *****    div1:   select rom 1
1450                                            
1451   L04246:  ..1111111.                      sub1:   0 - c - 1 -> c[s]
1452   L04247:  .....1....  -> L00250  *****    add1:   select rom 0
1453                                            
1454   L04250:  .1.1111..1  -> L04136           tpl1:   jsb sav9
1455   L04251:  ..11...1..                              1 -> s3
1456   L04252:  .1..1..1..                              0 -> s4
1457   L04253:  .11.11111.                              if c[s] = 0
1458   L04254:  1.1.111.11  -> L04256                        then go to tpl2
1459   L04255:  .1.....1..                              1 -> s4
1460   L04256:  11..1.1...                      tpl2:   down rotate
1461   L04257:  1...1....1  -> L04210                   jsb exc1
1462   L04260:  1..11..11.                              if a[m] >= 1
1463   L04261:  ..11.1.111  -> L04065                        then go to tpl6
1464   L04262:  ..11.1..1.                              0 -> c[wp]
1465   L04263:  .1111...1.                              c + 1 -> c[p]
1466   L04264:  ..11.1.1.1  -> L04065                   jsb tpl6
1467                                            
1468   L04265:  ...11..1..                      tpl3:   0 -> s1
1469   L04266:  1....111.1  -> L04207                   jsb exch
1470   L04267:  .11...111.                              c -> a[w]
1471   L04270:  1.1..1...1  -> L04244                   jsb mul1
1472   L04271:  1.1111....                              c -> data
1473   L04272:  11..1.11.1  -> L04313                   jsb rest
1474   L04273:  .11..1...1  -> L04144                   jsb adr9
1475   L04274:  1.1..1...1  -> L04244                   jsb mul1
1476   L04275:  1.11111...                              data -> c
1477   L04276:  1.1..111.1  -> L04247                   jsb add1
1478   L04277:  11.1111.1.                              a - 1 -> a[xs]
1479   L04300:  11.1111.1.                              a - 1 -> a[xs]
1480   L04301:  11.1111.1.                              a - 1 -> a[xs]
1481   L04302:  11...1.111  -> L04305                   if no carry go to tpl5
1482   L04303:  .1.1111.1.                              c - 1 -> c[xs]
1483   L04304:  1111...1.1  -> L04361                   jsb reg9
1484                                            
1485   L04305:  .11...111.                      tpl5:   c -> a[w]
1486   L04306:  .1.....1.1  -> L04101                   jsb sqt1
1487   L04307:  1111...111  -> L04361                   go to reg9      
1488                                            
1489   L04310:  .11....1.1  -> L04141           tnx2:   jsb save
1490   L04311:  ..1....1..                              1 -> s2
1491   L04312:  .....1.111  -> L04005                   go to tnx3
1492                                            
1493   L04313:  ..11..111.                      rest:   0 -> c[w]
1494   L04314:  1..111....                              c -> data address
1495   L04315:  ..........                              no operation
1496   L04316:  1.11111...                              data -> c
1497   L04317:  ....11....                              return
1498                                            
1499   L04320:  1..1.1.1..                      sgma:   if s9 # 1
1500   L04321:  11.1..1111  -> L04323                        then go to sig1
1501   L04322:  1..1111111  -> L04237                   go to rcxy
1502                                            
1503   L04323:  .11......1  -> L04140           sig1:   jsb sav1
1504   L04324:  ...1.1.111  -> L04025                   go to sig2
1505                                            
1506   L04325:  ..........                              no operation
1507   L04326:  ..........                              no operation
1508   L04327:  ..........                              no operation
1509   L04330:  ..........                              no operation
1510   L04331:  ..........                              no operation
1511   L04332:  ..........                              no operation
1512   L04333:  ..........                              no operation
1513   L04334:  ..........                              no operation
1514   L04335:  ..........                              no operation
1515   L04336:  ..........                              no operation
1516   L04337:  ..........                              no operation
1517   L04340:  ..........                              no operation
1518   L04341:  ..........                              no operation
1519   L04342:  ..........                              no operation
1520   L04343:  ..........                              no operation
1521   L04344:  ..........                              no operation
1522   L04345:  ..........                              no operation
1523   L04346:  ..........                              no operation
1524   L04347:  ..........                              no operation
1525   L04350:  ..........                              no operation
1526   L04351:  ..........                              no operation
1527   L04352:  ..........                              no operation
1528   L04353:  ..........                              no operation
1529   L04354:  ..........                              no operation
1530   L04355:  ..........                              no operation
1531   L04356:  ..........                              no operation
1532   L04357:  ..........                              no operation
1533   L04360:  ..........                              no operation
1534                                            
1535   L04361:  .....1....  -> L00362  *****    reg9:   select rom 0
1536                                            
1537   L04362:  ..........                              no operation
1538   L04363:  ..........                              no operation
1539   L04364:  ..........                              no operation
1540                                            
1541   L04365:  1.1..1....  -> L05366  *****    clr2:   select rom 5
1542                                            
1543   L04366:  ..........                              no operation
1544   L04367:  ..........                              no operation
1545   L04370:  ..........                              no operation
1546   L04371:  ..........                              no operation
1547   L04372:  ..........                              no operation
1548   L04373:  ..........                              no operation
1549   L04374:  ..........                              no operation
1550   L04375:  ..........                              no operation
1551                                            
1552   L04376:  ....11....                      retnzx: return
1553                                            
1554   L04377:  11...1....  -> L06000  *****    fac2:   select rom 6
1555                                            
00052 acos 1276
00113 acs1 1323
00247 add1 1452
00026 addd 1244
00027 adddz3 1245
00144 adr9 1358
00215 am10 1416
00216 am11 1417
00220 am12 1420
00171 am13 1387
00150 amd1 1364
00153 amd2 1368
00154 amd3 1369
00156 amd4 1372
00163 amd5 1380
00164 amd6 1381
00165 amd7 1382
00177 amd8 1398
00213 amd9 1414
00174 amd9z3 1392
00053 asin 1278
00050 atan 1273
00047 atn2 1272
00104 c100 1315
00070 cler 1299
00074 clok 1305
00365 clr2 1541
00160 con1 1375
00161 cons 1376
00076 degr 1307
00044 dig0 1267
00034 dig1 1253
00033 dig2 1252
00032 dig3 1251
00024 dig4 1240
00023 dig5 1239
00022 dig6 1238
00064 dig7 1292
00063 dig8 1291
00062 dig9 1290
00241 div0 1443
00112 div0z3 1321
00245 div1 1449
00046 divdz3 1270
00015 dmsd 1230
00012 dmst 1225
00230 dpc1 1430
00010 dpct 1221
00202 dsp0 1402
00043 dspt 1265
00205 dspx 1406
00210 exc1 1410
00207 exch 1409
00377 fac2 1554
00016 fact 1232
00176 fst1 1396
00072 grad 1302
00130 log2 1340
00004 logg 1214
00077 mode 1308
00124 mreg 1334
00122 mrg0 1332
00243 mul0 1446
00111 mul0z3 1320
00244 mul1 1447
00036 mult 1257
00037 multz3 1258
00102 pct1 1313
00011 percz3 1223
00204 pfx1 1405
00162 piii 1378
00000 prfx 1207
00001 prfxz3 1208
00073 radn 1303
00237 rcxy 1439
00361 reg9 1535
00313 rest 1493
00376 retnzx 1552
00140 sav1 1352
00145 sav2 1360
00136 sav9 1349
00141 save 1353
00143 savx 1356
00002 sci1 1210
00134 sci2 1346
00320 sgma 1499
00116 shft 1328
00323 sig1 1503
00025 sig2 1242
00042 sigmz3 1263
00056 sqrt 1284
00101 sqt1 1311
00040 std1 1260
00014 stdd 1228
00246 sub1 1451
00066 subt 1296
00067 subtz3 1297
00020 tdm1 1235
00013 tdms 1226
00003 tenx 1212
00240 tkraz3 1441
00310 tnx2 1489
00005 tnx3 1216
00250 tpl1 1454
00256 tpl2 1460
00265 tpl3 1468
00305 tpl5 1485
00065 tpl6 1294
00030 tpolz0 1247
00055 tpolz3 1282
00223 trc1 1424
00115 trc2 1326
00054 trec 1280
00006 xtoy 1218
00132 xty1 1343
1557                                            
1558                                                    .rom @05
1559                                            
1560   L05000:  11...1....  -> L06001  *****    err2:   select rom 6
1561                                            
1562   L05001:  .1111...1.                      adr5:   c + 1 -> c[p]
1563   L05002:  .1111...1.                      adr6:   c + 1 -> c[p]
1564   L05003:  .1111...1.                      adr7:   c + 1 -> c[p]
1565   L05004:  .1111...1.                      adr8:   c + 1 -> c[p]
1566   L05005:  .1111...1.                      adr9:   c + 1 -> c[p]
1567   L05006:  .1.1..111.                      adr0:   a - c -> c[w]
1568   L05007:  1..111....                              c -> data address
1569   L05010:  ..........                              no operation
1570   L05011:  1.11111...                              data -> c
1571   L05012:  .1...1.1..                              if s4 # 1
1572   L05013:  1111111111  -> L05377                        then go to retnzx
1573   L05014:  111.1.111.                              a exchange c[w]
1574   L05015:  1....1.1..                              if s8 # 1
1575   L05016:  1.1..11111  -> L05247                        then go to add1
1576   L05017:  1.1..11.11  -> L05246                   go to sub1
1577                                            
1578   L05020:  .11..1....  -> L03021  *****    fst2:   select rom 3
1579                                            
1580   L05021:  ..........                              no operation
1581   L05022:  ..........                              no operation
1582   L05023:  ..........                              no operation
1583   L05024:  ..........                              no operation
1584                                            
1585   L05025:  111..1..11  -> L05344           pwo2z0: go to pwo2
1586                                            
1587   L05026:  .1.....1..                      sgmaz4: 1 -> s4
1588   L05027:  1.1.1..1..                              0 -> s10
1589   L05030:  1.1..1...1  -> L05244                   jsb mul1
1590   L05031:  ......1..1  -> L05002                   jsb adr6
1591   L05032:  1.111.11.1  -> L05273                   jsb stor
1592   L05033:  ..1.11.1.1  -> L05055                   jsb rest
1593   L05034:  .11...111.                              c -> a[w]
1594   L05035:  ......11.1  -> L05003                   jsb adr7
1595   L05036:  ..1...1111  -> L05043                   go to sig1
1596                                            
1597   L05037:  ..........                              no operation
1598   L05040:  ..........                              no operation
1599   L05041:  ..........                              no operation
1600                                            
1601   L05042:  .1....1.11  -> L05102           stddz4: go to stdd
1602                                            
1603   L05043:  1.111.11.1  -> L05273           sig1:   jsb stor
1604   L05044:  ..11..1..1  -> L05062                   jsb yget
1605   L05045:  .....1...1  -> L05004                   jsb adr8
1606   L05046:  1.111.11.1  -> L05273                   jsb stor
1607   L05047:  ..11..111.                              0 -> c[w]
1608   L05050:  .1111...1.                              c + 1 -> c[p]
1609   L05051:  .11...111.                              c -> a[w]
1610   L05052:  .......1.1  -> L05001                   jsb adr5
1611   L05053:  1.111.11.1  -> L05273                   jsb stor
1612   L05054:  ...1....11  -> L05020                   go to fst2
1613                                            
1614   L05055:  ..11..111.                      rest:   0 -> c[w]
1615   L05056:  1..111....                              c -> data address
1616   L05057:  ..........                              no operation
1617   L05060:  1.11111...                              data -> c
1618   L05061:  ....11....                              return
1619                                            
1620   L05062:  11..1.1...                      yget:   down rotate
1621   L05063:  .1..1.1...                              c -> stack
1622   L05064:  .11...111.                              c -> a[w]
1623   L05065:  ....11....                              return
1624                                            
1625   L05066:  1...1..1..                      tploz4: 0 -> s8
1626   L05067:  1..11..1..                              0 -> s9
1627   L05070:  1.1..1.1.1  -> L05245           tpl0zj: jsb div1
1628                                            
1629   L05071:  ..........                              no operation
1630   L05072:  ..........                              no operation
1631   L05073:  ..........                              no operation
1632   L05074:  ..........                              no operation
1633   L05075:  ..........                              no operation
1634   L05076:  ..........                              no operation
1635   L05077:  ..........                              no operation
1636   L05100:  ..........                              no operation
1637                                            
1638   L05101:  .11..1....  -> L03102  *****    sqt1:   select rom 3
1639                                            
1640   L05102:  1.1.1..1..                      stdd:   0 -> s10
1641   L05103:  .1..1..1..                              0 -> s4
1642   L05104:  ......11.1  -> L05003                   jsb adr7
1643   L05105:  .11...111.                              c -> a[w]
1644   L05106:  1.1..1...1  -> L05244                   jsb mul1
1645   L05107:  .......1.1  -> L05001                   jsb adr5
1646   L05110:  ...111111.                              if c[s] >= 1
1647   L05111:  ........11  -> L05000                        then go to err2
1648   L05112:  1.1..1.1.1  -> L05245                   jsb div1
1649   L05113:  ......1..1  -> L05002                   jsb adr6
1650   L05114:  111.1.111.                              a exchange c[w]
1651   L05115:  1.1..11..1  -> L05246                   jsb sub1
1652   L05116:  .1..1.1...                              c -> stack
1653   L05117:  .......1.1  -> L05001                   jsb adr5
1654   L05120:  111.1.111.                              a exchange c[w]
1655   L05121:  ..11..111.                              0 -> c[w]
1656   L05122:  .1111...1.                              c + 1 -> c[p]
1657   L05123:  1.1..11..1  -> L05246                   jsb sub1
1658   L05124:  .11.1.1...                              stack -> a
1659   L05125:  1.1..1.1.1  -> L05245                   jsb div1
1660   L05126:  .1.....1.1  -> L05101                   jsb sqt1
1661   L05127:  .1..1.1...                              c -> stack
1662   L05130:  ......11.1  -> L05003                   jsb adr7
1663   L05131:  .11...111.                              c -> a[w]
1664   L05132:  .......1.1  -> L05001                   jsb adr5
1665   L05133:  1.1....1.1  -> L05241                   jsb div0
1666   L05134:  .1..1..1..                      rcxy:   0 -> s4
1667   L05135:  .111.1.1..                              if s7 # 1
1668   L05136:  .11.....11  -> L05140                        then go to rxy1
1669   L05137:  .1..1.1...                              c -> stack
1670   L05140:  .11...111.                      rxy1:   c -> a[w]
1671   L05141:  .....1...1  -> L05004                   jsb adr8
1672   L05142:  .1..1.1...                              c -> stack
1673   L05143:  .11...111.                              c -> a[w]
1674   L05144:  ......11.1  -> L05003                   jsb adr7
1675   L05145:  .111111.11  -> L05176                   go to fst1
1676                                            
1677   L05146:  ..........                              no operation
1678   L05147:  ..........                              no operation
1679   L05150:  ..........                              no operation
1680   L05151:  ..........                              no operation
1681   L05152:  ..........                              no operation
1682   L05153:  ..........                              no operation
1683   L05154:  ..........                              no operation
1684   L05155:  ..........                              no operation
1685   L05156:  ..........                              no operation
1686   L05157:  ..........                              no operation
1687   L05160:  ..........                              no operation
1688   L05161:  ..........                              no operation
1689   L05162:  ..........                              no operation
1690   L05163:  ..........                              no operation
1691   L05164:  ..........                              no operation
1692                                            
1693   L05165:  1.111.11.1  -> L05273           am10:   jsb stor
1694   L05166:  111.1.111.                              a exchange c[w]
1695   L05167:  .11..1....  -> L03170  *****            select rom 3
1696                                            
1697   L05170:  ..........                              no operation
1698   L05171:  ..........                              no operation
1699   L05172:  ..........                              no operation
1700                                            
1701   L05173:  11.111...1  -> L05334           amd0z4: jsb dcod                ; unsure of label
1702   L05174:  1..1.1.1..                              if s9 # 1
1703   L05175:  .111.1.111  -> L05165                        then go to am10
1704   L05176:  .11..1....  -> L03177  *****    fst1:   select rom 3
1705                                            
1706   L05177:  ..........                              no operation
1707   L05200:  ..........                              no operation
1708   L05201:  ..........                              no operation
1709   L05202:  ..........                              no operation
1710   L05203:  ..........                              no operation
1711   L05204:  ..........                              no operation
1712   L05205:  ..........                              no operation
1713   L05206:  ..........                              no operation
1714   L05207:  ..........                              no operation
1715   L05210:  ..........                              no operation
1716   L05211:  ..........                              no operation
1717   L05212:  ..........                              no operation
1718   L05213:  ..........                              no operation
1719   L05214:  ..........                              no operation
1720   L05215:  ..........                              no operation
1721   L05216:  ..........                              no operation
1722   L05217:  ..........                              no operation
1723   L05220:  ..........                              no operation
1724   L05221:  ..........                              no operation
1725   L05222:  ..........                              no operation
1726   L05223:  ..........                              no operation
1727   L05224:  ..........                              no operation
1728   L05225:  ..........                              no operation
1729   L05226:  ..........                              no operation
1730   L05227:  ..........                              no operation
1731   L05230:  ..........                              no operation
1732   L05231:  ..........                              no operation
1733   L05232:  ..........                              no operation
1734   L05233:  ..........                              no operation
1735   L05234:  ..........                              no operation
1736   L05235:  ..........                              no operation
1737   L05236:  ..........                              no operation
1738   L05237:  ..........                              no operation
1739                                            
1740   L05240:  .1.111..11  -> L05134           rcxyz4: go to rcxy
1741                                            
1742   L05241:  ..111..1..                      div0:   0 -> s3
1743   L05242:  1.1..1.111  -> L05245                   go to div1
1744                                            
1745   L05243:  ..111..1..                      mul0:   0 -> s3
1746   L05244:  ..1..1....  -> L01245  *****    mul1:   select rom 1
1747                                            
1748   L05245:  ..1..1....  -> L01246  *****    div1:   select rom 1
1749                                            
1750   L05246:  ..1111111.                      sub1:   0 - c - 1 -> c[s]
1751   L05247:  .....1....  -> L00250  *****    add1:   select rom 0
1752                                            
1753   L05250:  ..........                              no operation
1754   L05251:  ..........                              no operation
1755   L05252:  ..........                              no operation
1756   L05253:  ..........                              no operation
1757   L05254:  ..........                              no operation
1758   L05255:  ..........                              no operation
1759   L05256:  ..........                              no operation
1760   L05257:  ..........                              no operation
1761                                            
1762   L05260:  ..11.1..1.                      dvof:   0 -> c[wp]
1763   L05261:  .1.111..1.                              c - 1 -> c[wp]
1764   L05262:  ..11.11.1.                              0 -> c[xs]
1765   L05263:  .1...1....  -> L02264  *****            select rom 2
1766                                            
1767   L05264:  1.11....11  -> L05260           dvofz2: go to dvof
1768                                            
1769   L05265:  ..11.1..1.                      ofl1:   0 -> c[wp]
1770   L05266:  .1.111..1.                              c - 1 -> c[wp]
1771   L05267:  ..11.11.1.                              0 -> c[xs]
1772   L05270:  111...1.1.                              a + b -> a[x]
1773   L05271:  1.111.1111  -> L05273                   if no carry go to stor
1774   L05272:  ..11..111.                              0 -> c[w]
1775   L05273:  .11...111.                      stor:   c -> a[w]
1776   L05274:  11....11..                      ofl4:   12 -> p
1777   L05275:  .1..1.1.1.                              a -> b[x]
1778   L05276:  .11...1.1.                              c -> a[x]
1779   L05277:  .11.111.1.                              if c[xs] = 0
1780   L05300:  11...1..11  -> L05304                        then go to ofl5
1781   L05301:  ..1.1.1.1.                              0 - c -> c[x]
1782   L05302:  .1.1111.1.                              c - 1 -> c[xs]
1783   L05303:  1.11.1.111  -> L05265                   if no carry go to ofl1
1784   L05304:  111.11.11.                      ofl5:   a exchange c[ms]
1785   L05305:  1.11111...                              data -> c
1786   L05306:  111.1.111.                              a exchange c[w]
1787   L05307:  1.1111....                              c -> data
1788   L05310:  ....11....                              return
1789                                            
1790   L05311:  ..........                              no operation
1791   L05312:  ..........                              no operation
1792   L05313:  ..........                              no operation
1793   L05314:  ..........                              no operation
1794   L05315:  ..........                              no operation
1795   L05316:  ..........                              no operation
1796   L05317:  ..........                              no operation
1797   L05320:  ..........                              no operation
1798   L05321:  ..........                              no operation
1799   L05322:  ..........                              no operation
1800   L05323:  ..........                              no operation
1801   L05324:  ..........                              no operation
1802   L05325:  ..........                              no operation
1803   L05326:  ..........                              no operation
1804   L05327:  ..........                              no operation
1805   L05330:  ..........                              no operation
1806   L05331:  ..........                              no operation
1807   L05332:  ..........                              no operation
1808   L05333:  ..........                              no operation
1809                                            
1810   L05334:  .1...1.1..                      dcod:   if s4 # 1
1811   L05335:  111....111  -> L05341                        then go to dcd1
1812   L05336:  .11..1.1..                              if s6 # 1
1813   L05337:  1.1..11.11  -> L05246                        then go to sub1
1814   L05340:  1.1..11111  -> L05247                   go to add1
1815                                            
1816   L05341:  .11..1.1..                      dcd1:   if s6 # 1
1817   L05342:  1.1..1.111  -> L05245                        then go to div1
1818   L05343:  1.1..1..11  -> L05244                   go to mul1
1819                                            
1820   L05344:  ..11..111.                      pwo2:   0 -> c[w]
1821   L05345:  .1.111111.                              c - 1 -> c[s]
1822   L05346:  ..1...11..                              2 -> p
1823   L05347:  ..1..11...                              load constant 2
1824   L05350:  ..1.1.1...                              c exchange m
1825   L05351:  ..11..111.                              0 -> c[w]
1826   L05352:  1.111.111.                      clr2:   0 -> a[w]
1827   L05353:  11....11..                              12 -> p
1828   L05354:  .1.11...1.                      clr3:   c - 1 -> c[p]
1829   L05355:  1..111....                              c -> data address
1830   L05356:  111.1.111.                              a exchange c[w]
1831   L05357:  .1..1.1...                              c -> stack
1832   L05360:  1.1111....                              c -> data
1833   L05361:  111.1.111.                              a exchange c[w]
1834   L05362:  .1111...1.                              c + 1 -> c[p]
1835   L05363:  .1111...1.                              c + 1 -> c[p]
1836   L05364:  111.11..11  -> L05354                   if no carry go to clr3
1837   L05365:  .111111.11  -> L05176                   go to fst1
1838                                            
1839   L05366:  ..11..111.                      clr1z4: 0 -> c[w]
1840   L05367:  .11..11...                              load constant 6
1841   L05370:  111.1.1.11  -> L05352                   go to clr2
1842                                            
1843   L05371:  ..........                              no operation
1844   L05372:  ..........                              no operation
1845   L05373:  ..........                              no operation
1846   L05374:  ..........                              no operation
1847   L05375:  ..........                              no operation
1848   L05376:  ..........                              no operation
1849                                            
1850   L05377:  ....11....                      retnzx: return
1851                                            
00247 add1 1751
00006 adr0 1567
00001 adr5 1562
00002 adr6 1563
00003 adr7 1564
00004 adr8 1565
00005 adr9 1566
00165 am10 1693
00173 amd0z4 1701
00366 clr1z4 1839
00352 clr2 1826
00354 clr3 1828
00341 dcd1 1816
00334 dcod 1810
00241 div0 1742
00245 div1 1748
00260 dvof 1762
00264 dvofz2 1767
00000 err2 1560
00176 fst1 1704
00020 fst2 1578
00243 mul0 1745
00244 mul1 1746
00265 ofl1 1769
00274 ofl4 1776
00304 ofl5 1784
00344 pwo2 1820
00025 pwo2z0 1585
00134 rcxy 1666
00240 rcxyz4 1740
00055 rest 1614
00377 retnzx 1850
00140 rxy1 1670
00026 sgmaz4 1587
00043 sig1 1603
00101 sqt1 1638
00102 stdd 1640
00042 stddz4 1601
00273 stor 1775
00246 sub1 1750
00070 tpl0zj 1627
00066 tploz4 1625
00062 yget 1620
1853                                            
1854                                                    .rom @06
1855                                            
1856   L06000:  1.1111..11  -> L06274           factz4: go to fact
1857                                            
1858   L06001:  .....11111  -> L06007           err2z1: go to errr
1859                                            
1860   L06002:  ....11.1..                      tdmsz0: clear status
1861   L06003:  .111111111  -> L06177                   go to tdmszj
1862                                            
1863   L06004:  .111111.1.                      oflw:   c + 1 -> c[xs]
1864   L06005:  .111111..1  -> L06176                   jsb fst1
1865                                            
1866   L06006:  1111.1...1  -> L06364           tenxzj: jsb tnx3
1867   L06007:  ..11..111.                      errr:   0 -> c[w]
1868   L06010:  ....11.1..                              clear status
1869   L06011:  .1.1...1..                              1 -> s5
1870   L06012:  .11...111.                      rnd0z3: c -> a[w]
1871   L06013:  1.1.1.1...                              m -> c
1872   L06014:  111.1.111.                              a exchange c[w]
1873   L06015:  ...11..111  -> L06031                   go to rndx
1874                                            
1875   L06016:  1.11.1.11.                      rnd3:   shift right a[ms]
1876   L06017:  11111.1.1.                              a + 1 -> a[x]
1877   L06020:  ....111.11  -> L06016                   if no carry go to rnd3
1878   L06021:  11.1..11..                      rnd4:   13 -> p
1879   L06022:  11..111.1.                      rnd5:   a exchange b[xs]
1880   L06023:  .1..111.1.                              a -> b[xs]
1881   L06024:  .....111..                      rnd6:   p - 1 -> p
1882   L06025:  ..1.1.11..                              if p # 2
1883   L06026:  ..1.11.111  -> L06055                        then go to rnd7
1884   L06027:  1.111.111.                      rnof:   0 -> a[w]
1885   L06030:  11.11.1.1.                              a - 1 -> a[x]
1886   L06031:  ....1.111.                      rndx:   0 -> b[w]
1887   L06032:  1......1..                              1 -> s8
1888   L06033:  ...1..11..                              1 -> p
1889   L06034:  .1..111.1.                              a -> b[xs]
1890   L06035:  .11....11.                              c -> a[m]
1891   L06036:  .1...1.11.                              shift left a[ms]
1892   L06037:  1..11...1.                              if a[p] >= 1
1893   L06040:  ...1...111  -> L06021                        then go to rnd4
1894   L06041:  1...1..1..                              0 -> s8
1895   L06042:  111...11..                              14 -> p
1896   L06043:  .11...1.1.                              c -> a[x]
1897   L06044:  ...1111.1.                              if c[xs] >= 1
1898   L06045:  ....111.11  -> L06016                        then go to rnd3
1899   L06046:  .....111..                      rnd1:   p - 1 -> p
1900   L06047:  ..1.1.11..                              if p # 2
1901   L06050:  ..1.1.1.11  -> L06052                        then go to rnd2
1902   L06051:  ...1.11111  -> L06027                   go to rnof
1903                                            
1904   L06052:  11.11.1.1.                      rnd2:   a - 1 -> a[x]
1905   L06053:  ..1..11.11  -> L06046                   if no carry go to rnd1
1906   L06054:  ...1..1.11  -> L06022                   go to rnd5
1907                                            
1908   L06055:  11.1111.1.                      rnd7:   a - 1 -> a[xs]
1909   L06056:  ...1.1..11  -> L06024                   if no carry go to rnd6
1910   L06057:  .1..1...1.                              a -> b[p]
1911   L06060:  .....111..                              p - 1 -> p
1912   L06061:  1.1111..1.                              0 -> a[wp]
1913   L06062:  .11...1.1.                              c -> a[x]
1914   L06063:  111..1.11.                              a + b -> a[ms]
1915   L06064:  ..111.1.11  -> L06072                   if no carry go to rnd8
1916   L06065:  1.11.1.11.                              shift right a[ms]
1917   L06066:  111111111.                              a + 1 -> a[s]
1918   L06067:  11111.1.1.                              a + 1 -> a[x]
1919   L06070:  1....1.1..                              if s8 # 1
1920   L06071:  ..111.1111  -> L06073                        then go to rnd9
1921   L06072:  ....1111..                      rnd8:   p + 1 -> p
1922   L06073:  1.11.1.11.                      rnd9:   shift right a[ms]
1923   L06074:  ....11.11.                              0 -> b[ms]
1924   L06075:  11.1111.1.                              a - 1 -> a[xs]
1925   L06076:  1..1111.1.                              if a[xs] >= 1
1926   L06077:  .1.....111  -> L06101                        then go to rn10
1927   L06100:  ...1.11111  -> L06027                   go to rnof
1928                                            
1929   L06101:  1111111.1.                      rn10:   a + 1 -> a[xs]
1930   L06102:  11..1.111.                              a exchange b[w]
1931   L06103:  11111...1.                              a + 1 -> a[p]
1932   L06104:  11111...1.                              a + 1 -> a[p]
1933   L06105:  .1...1.11.                      rn11:   shift left a[ms]
1934   L06106:  11.1111.1.                              a - 1 -> a[xs]
1935   L06107:  .1...1.111  -> L06105                   if no carry go to rn11
1936   L06110:  1.1111..1.                              0 -> a[wp]
1937   L06111:  11.111..1.                              a - 1 -> a[wp]
1938   L06112:  1.11.1.11.                              shift right a[ms]
1939   L06113:  11..1.111.                              a exchange b[w]
1940   L06114:  1....1.1..                              if s8 # 1
1941   L06115:  .1.1.1.111  -> L06125                        then go to rnrt
1942   L06116:  111.1.1.1.                              a exchange c[x]
1943   L06117:  ....1.1.1.                              0 -> b[x]
1944   L06120:  .11.111.1.                              if c[xs] = 0
1945   L06121:  .1.1.1..11  -> L06124                        then go to rtrn
1946   L06122:  ..1.1.1.1.                              0 - c -> c[x]
1947   L06123:  .1.1111.1.                              c - 1 -> c[xs]
1948   L06124:  111.1.1.1.                      rtrn:   a exchange c[x]
1949   L06125:  .1.1.1.1..                      rnrt:   if s5 # 1
1950   L06126:  1111111.11  -> L06376                        then go to ret3
1951   L06127:  1.......11  -> L06200                   go to fst2
1952                                            
1953   L06130:  ..........                              no operation
1954   L06131:  ..........                              no operation
1955   L06132:  ..........                              no operation
1956   L06133:  ..........                              no operation
1957   L06134:  ..........                              no operation
1958   L06135:  ..........                              no operation
1959   L06136:  ..........                              no operation
1960   L06137:  ..........                              no operation
1961   L06140:  ..........                              no operation
1962   L06141:  ..........                              no operation
1963   L06142:  ..........                              no operation
1964                                            
1965   L06143:  1.11.1..11  -> L06264           savezx: go to save
1966                                            
1967   L06144:  1.1..1..11  -> L06244           sav2zx: go to sav2
1968                                            
1969   L06145:  .11...111.                      adr9z4: c -> a[w]
1970   L06146:  ..11..111.                              0 -> c[w]
1971   L06147:  .1.11...1.                              c - 1 -> c[p]
1972   L06150:  1..111....                              c -> data address
1973   L06151:  111.1.111.                              a exchange c[w]
1974   L06152:  .11...111.                              c -> a[w]
1975   L06153:  11111.1111  -> L06373                   go to svrt
1976                                            
1977   L06154:  ..........                              no operation
1978   L06155:  ..........                              no operation
1979   L06156:  ..........                              no operation
1980   L06157:  ..........                              no operation
1981   L06160:  ..........                              no operation
1982   L06161:  ..........                              no operation
1983                                            
1984   L06162:  1......111  -> L06201           consz4: go to cons
1985                                            
1986   L06163:  .111.11..1  -> L06166           piiiz4: jsb push
1987   L06164:  ....11.1..                              clear status
1988   L06165:  ..1..1....  -> L01166  *****            select rom 1
1989                                            
1990   L06166:  .111.1.1..                      push:   if s7 # 1
1991   L06167:  .1111..111  -> L06171                        then go to pret
1992   L06170:  .1..1.1...                              c -> stack
1993   L06171:  ..11..111.                      pret:   0 -> c[w]
1994   L06172:  ....11....                              return
1995                                            
1996   L06173:  ..........                              no operation
1997                                            
1998   L06174:  1.1.1..1..                      lstxzj: 0 -> s10
1999   L06175:  .11..1...1  -> L06144                   jsb sav2zx
2000   L06176:  .11..1....  -> L03177  *****    fst1:   select rom 3
2001                                            
2002   L06177:  ...11..1.1  -> L06031           tdmszj: jsb rndx
2003   L06200:  .11..1....  -> L03201  *****    fst2:   select rom 3
2004                                            
2005   L06201:  .1....111.                      cons:   shift left a[w]
2006   L06202:  .1....111.                              shift left a[w]
2007   L06203:  .111.11..1  -> L06166                   jsb push
2008   L06204:  11.1111.1.                              a - 1 -> a[xs]
2009   L06205:  1....11111  -> L06207                   if no carry go to con7
2010   L06206:  .11111..11  -> L06174                   go to lstxzj
2011                                            
2012   L06207:  11.1111.1.                      con7:   a - 1 -> a[xs]
2013   L06210:  1...11.111  -> L06215                   if no carry go to con8
2014   L06211:  ..1..11...                              load constant 2
2015   L06212:  .1.1.11...                              load constant 5
2016   L06213:  .1...11...                              load constant 4
2017   L06214:  .111111.11  -> L06176                   go to fst1
2018                                            
2019   L06215:  11.1111.1.                      con8:   a - 1 -> a[xs]
2020   L06216:  1..11..111  -> L06231                   if no carry go to con9
2021   L06217:  .1...11...                              load constant 4
2022   L06220:  .1.1.11...                              load constant 5
2023   L06221:  ..11.11...                              load constant 3
2024   L06222:  .1.1.11...                              load constant 5
2025   L06223:  1..1.11...                              load constant 9
2026   L06224:  ..1..11...                              load constant 2
2027   L06225:  ..11.11...                              load constant 3
2028   L06226:  .111.11...                              load constant 7
2029   L06227:  .1.11.1.1.                              c - 1 -> c[x]
2030   L06230:  .111111..1  -> L06176                   jsb fst1
2031                                            
2032   L06231:  ..11.11...                      con9:   load constant 3
2033   L06232:  .111.11...                              load constant 7
2034   L06233:  1....11...                              load constant 8
2035   L06234:  .1.1.11...                              load constant 5
2036   L06235:  .1...11...                              load constant 4
2037   L06236:  ...1.11...                              load constant 1
2038   L06237:  ...1.11...                              load constant 1
2039   L06240:  .111.11...                              load constant 7
2040   L06241:  1....11...                              load constant 8
2041   L06242:  .1...11...                              load constant 4
2042   L06243:  .111111.11  -> L06176                   go to fst1
2043                                            
2044   L06244:  ......11..                      sav2:   0 -> p
2045   L06245:  .1....111.                      sav1:   shift left a[w]
2046   L06246:  ....1111..                              p + 1 -> p
2047   L06247:  11..1.11..                              if p # 12
2048   L06250:  1.1..1.111  -> L06245                        then go to sav1
2049   L06251:  1.1111111.                              0 -> a[s]
2050   L06252:  111.1.111.                              a exchange c[w]
2051   L06253:  1..111....                              c -> data address
2052   L06254:  ..1.1..1..                              0 -> s2
2053   L06255:  1.11111...                              data -> c
2054   L06256:  111.1.111.                              a exchange c[w]
2055   L06257:  1.111..1..                              0 -> s11
2056   L06260:  ....1.111.                              0 -> b[w]
2057   L06261:  ...1.1.1..                              if s1 # 1
2058   L06262:  11111.1111  -> L06373                        then go to svrt
2059   L06263:  .11..1.111  -> L06145                   go to adr9z4
2060                                            
2061   L06264:  .1..1.111.                      save:   a -> b[w]
2062   L06265:  111.1.111.                              a exchange c[w]
2063   L06266:  ..11..111.                              0 -> c[w]
2064   L06267:  1..111....                              c -> data address
2065   L06270:  ..1...111.                              b -> c[w]
2066   L06271:  111.1.111.                              a exchange c[w]
2067   L06272:  1.1111....                              c -> data
2068   L06273:  .11..1..11  -> L06144                   go to sav2zx
2069                                            
2070   L06274:  ...111111.                      fact:   if c[s] >= 1
2071   L06275:  .....11111  -> L06007                        then go to errr
2072   L06276:  ...1111.1.                              if c[xs] >= 1
2073   L06277:  .....11111  -> L06007                        then go to errr
2074   L06300:  ...11.1.1.                      fac0:   if c[x] >= 1
2075   L06301:  11...1..11  -> L06304                        then go to fac1
2076   L06302:  .....111..                              p - 1 -> p
2077   L06303:  11..1.1111  -> L06313                   go to fact1
2078   L06304:  .....111..                      fac1:   p - 1 -> p
2079   L06305:  ..111.11..                              if p # 3
2080   L06306:  11..1...11  -> L06310                        then go to fac2
2081   L06307:  .....1..11  -> L06004                   go to oflw
2082                                            
2083   L06310:  .1.11.1.1.                      fac2:   c - 1 -> c[x]
2084   L06311:  11.......1  -> L06300                   jsb fac0
2085   L06312:  .1...1....  -> L02313  *****    nrm20:  select rom 2
2086                                            
2087   L06313:  ...111..1.                      fact1:  if c[wp] >= 1
2088   L06314:  .....11111  -> L06007                        then go to errr
2089   L06315:  111.1.1.1.                              a exchange c[x]
2090   L06316:  1.11..11..                              11 -> p
2091   L06317:  .11.1.1.1.                              if c[x] = 0
2092   L06320:  11.1.1.111  -> L06325                        then go to fact2
2093   L06321:  .1.11.1.1.                              c - 1 -> c[x]
2094   L06322:  ...11.1.1.                              if c[x] >= 1
2095   L06323:  .....1..11  -> L06004                        then go to oflw
2096   L06324:  .1....111.                              shift left a[w]
2097   L06325:  111.1.111.                      fact2:  a exchange c[w]
2098   L06326:  1.111.111.                              0 -> a[w]
2099   L06327:  11111...1.                              a + 1 -> a[p]
2100   L06330:  ..1.1.111.                              0 - c -> c[w]
2101   L06331:  11..1.1.11  -> L06312                   if no carry go to nrm20
2102   L06332:  111.1.111.                              a exchange c[w]
2103   L06333:  1..1..111.                              shift right c[w]
2104   L06334:  .11111111.                              c + 1 -> c[s]
2105   L06335:  11....11..                      fact3:  12 -> p
2106   L06336:  .1..11.11.                              a -> b[ms]
2107   L06337:  1111..111.                      fact4:  a + c -> a[w]
2108   L06340:  11.1111111  -> L06337                   if no carry go to fact4
2109   L06341:  11.1..111.                              a - c -> a[w]
2110   L06342:  .1....111.                              shift left a[w]
2111   L06343:  1111..111.                      fact5:  a + c -> a[w]
2112   L06344:  111...1111  -> L06343                   if no carry go to fact5
2113   L06345:  111111111.                              a + 1 -> a[s]
2114   L06346:  11..1.111.                              a exchange b[w]
2115   L06347:  1111.11..1  -> L06366                   jsb shft
2116   L06350:  1.11..11..                              11 -> p
2117   L06351:  1111.11..1  -> L06366                   jsb shft
2118   L06352:  ..1...111.                              b -> c[w]
2119   L06353:  ....11..1.                              0 -> b[wp]
2120   L06354:  1.1...111.                              shift right b[w]
2121   L06355:  11..1.111.                              a exchange b[w]
2122   L06356:  111..1.11.                              a + b -> a[ms]
2123   L06357:  11.111.111  -> L06335                   if no carry go to fact3
2124   L06360:  111.1.111.                              a exchange c[w]
2125   L06361:  1...1.1.1.                              b exchange c[x]
2126   L06362:  .1111.1.1.                      fact6:  c + 1 -> c[x]
2127   L06363:  11..1.1..1  -> L06312           fact7:  jsb nrm20
2128   L06364:  1...1..1..                      tnx3:   0 -> s8
2129   L06365:  .1...1....  -> L02366  *****            select rom 2
2130                                            
2131   L06366:  ........1.                      shft:   if b[p] = 0
2132   L06367:  11111.1.11  -> L06372                        then go to shfr
2133   L06370:  1.1..1..1.                              shift right b[wp]
2134   L06371:  11111.1.1.                              a + 1 -> a[x]
2135   L06372:  ....11....                      shfr:   return
2136                                            
2137   L06373:  1.1..1.1..                      svrt:   if s10 # 1
2138   L06374:  1111111.11  -> L06376                        then go to ret3
2139   L06375:  1....1....  -> L04376  *****    ret4:   select rom 4
2140                                            
2141   L06376:  .11..1....  -> L03377  *****    ret3:   select rom 3
2142                                            
2143   L06377:  ..........                              no operation
2144                                            
00145 adr9z4 1969
00207 con7 2012
00215 con8 2019
00231 con9 2032
00201 cons 2005
00162 consz4 1984
00001 err2z1 1858
00007 errr 1867
00300 fac0 2074
00304 fac1 2078
00310 fac2 2083
00274 fact 2070
00313 fact1 2087
00325 fact2 2097
00335 fact3 2105
00337 fact4 2107
00343 fact5 2111
00362 fact6 2126
00363 fact7 2127
00000 factz4 1856
00176 fst1 2000
00200 fst2 2003
00174 lstxzj 1998
00312 nrm20 2085
00004 oflw 1863
00163 piiiz4 1986
00171 pret 1993
00166 push 1990
00376 ret3 2141
00375 ret4 2139
00101 rn10 1929
00105 rn11 1933
00012 rnd0z3 1870
00046 rnd1 1899
00052 rnd2 1904
00016 rnd3 1875
00021 rnd4 1878
00022 rnd5 1879
00024 rnd6 1881
00055 rnd7 1908
00072 rnd8 1921
00073 rnd9 1922
00031 rndx 1886
00027 rnof 1884
00125 rnrt 1949
00124 rtrn 1948
00245 sav1 2045
00244 sav2 2044
00144 sav2zx 1967
00264 save 2061
00143 savezx 1965
00372 shfr 2135
00366 shft 2131
00373 svrt 2137
00002 tdmsz0 1860
00177 tdmszj 2002
00006 tenxzj 1866
00364 tnx3 2128
2146                                            
2147                                                    .rom @07
2148                                            
2149   L07000:  .....1.111  -> L07005           prfx:   go to wt22
2150   L07001:  1.1...1.11  -> L07242           wt30:   go to wt29
2151   L07002:  .....1.111  -> L07005           fix1:   go to wt22
2152   L07003:  .....1.111  -> L07005           expn:   go to wt22
2153   L07004:  .....1.111  -> L07005           lnnn:   go to wt22
2154   L07005:  ....11.111  -> L07015           wt22:   go to wt21
2155   L07006:  .....1.111  -> L07005           invx:   go to wt22
2156   L07007:  ...1...111  -> L07021           wt18:   go to wt17
2157   L07010:  .....1.111  -> L07005           perc:   go to wt22
2158   L07011:  1.1..11111  -> L07247           wt09:   go to wt08
2159   L07012:  .....1.111  -> L07005           rcal:   go to wt22
2160   L07013:  .....1.111  -> L07005           stor:   go to wt22
2161   L07014:  .....1.111  -> L07005           rold:   go to wt22
2162   L07015:  1.1..1..11  -> L07244           wt21:   go to wt20
2163   L07016:  .....1.111  -> L07005           exc1:   go to wt22
2164   L07017:  1..1.11...                      reg9:   load constant 9
2165   L07020:  1..1..1111  -> L07223                   go to rega
2166   L07021:  1.1..1.111  -> L07245           wt17:   go to wt16
2167   L07022:  ..11....11  -> L07060           dig6:   go to reg6
2168   L07023:  ...1111111  -> L07037           dig5:   go to reg5
2169   L07024:  .1...11...                      dig4:   load constant 4
2170   L07025:  .11111.111  -> L07175                   go to reg1
2171   L07026:  .....1.111  -> L07005           addd:   go to wt22
2172   L07027:  1....11...                      reg8:   load constant 8
2173   L07030:  1..1..1111  -> L07223                   go to rega
2174   L07031:  1.1.1...11  -> L07250           wt06:   go to wt05
2175   L07032:  .1111.1.11  -> L07172           dig3:   go to reg3
2176   L07033:  .11111..11  -> L07174           dig2:   go to reg2
2177   L07034:  ...1.11...                      dig1:   load constant 1
2178   L07035:  .11111.111  -> L07175                   go to reg1
2179   L07036:  .....1.111  -> L07005           mult:   go to wt22
2180   L07037:  .1.1.11...                      reg5:   load constant 5
2181   L07040:  1..1..1111  -> L07223                   go to rega
2182   L07041:  ..1..11111  -> L07047           wt11:   go to wt10
2183   L07042:  1..1....11  -> L07220           sigp:   go to chs3
2184   L07043:  11.1...111  -> L07321           dcpt:   go to retn
2185   L07044:  .....11...                      dig0:   load constant 0
2186   L07045:  .11111.111  -> L07175                   go to reg1
2187   L07046:  .....1.111  -> L07005           divd:   go to wt22
2188   L07047:  ....1..111  -> L07011           wt10:   go to wt09
2189   L07050:  .....1.111  -> L07005           tang:   go to wt22
2190   L07051:  ..1.11.111  -> L07055           dl06:   go to dl05
2191   L07052:  .....1.111  -> L07005           coss:   go to wt22
2192   L07053:  .....1.111  -> L07005           sinn:   go to wt22
2193   L07054:  .....1.111  -> L07005           tpol:   go to wt22
2194   L07055:  ..1.111111  -> L07057           dl05:   go to dl04
2195   L07056:  .....1.111  -> L07005           sqar:   go to wt22
2196   L07057:  ..11.11111  -> L07067           dl04:   go to dl03
2197   L07060:  .11..11...                      reg6:   load constant 6
2198   L07061:  1..1..1111  -> L07223                   go to rega
2199   L07062:  ....111111  -> L07017           dig9:   go to reg9
2200   L07063:  ...1.11111  -> L07027           dig8:   go to reg8
2201   L07064:  .111.11...                      dig7:   load constant 7
2202   L07065:  .11111.111  -> L07175                   go to reg1
2203   L07066:  .....1.111  -> L07005           subt:   go to wt22
2204   L07067:  111111.111  -> L07375           dl03:   go to rtrn
2205   L07070:  1.111.111.                      clrx:   0 -> a[w]
2206   L07071:  ....11.1.1  -> L07015                   jsb wt21
2207   L07072:  .111.1..11  -> L07164           eexx:   go to eex1
2208   L07073:  1...111.11  -> L07216           chs1:   go to chs2
2209   L07074:  .111..1.11  -> L07162           clok:   go to chs4
2210   L07075:  .11..1....  -> L03076  *****    ent1:   select rom 3
2211                                            
2212   L07076:  1..1.1.1..                      ent1z3: if s9 # 1
2213   L07077:  ..1111.111  -> L07075                        then go to ent1
2214   L07100:  ....11.1..                      init:   clear status
2215   L07101:  ...111111.                              if c[s] >= 1
2216   L07102:  1111111.11  -> L07376                        then go to err2
2217   L07103:  .1.11.1.1.                              c - 1 -> c[x]
2218   L07104:  .1.11.1.1.                              c - 1 -> c[x]
2219   L07105:  .11.111.1.                              if c[xs] = 0
2220   L07106:  1111111.11  -> L07376                        then go to err2
2221   L07107:  .1..1..111  -> L07111                   go to int2
2222   L07110:  1..1...11.                      int1:   shift right c[m]
2223   L07111:  .1111.1.1.                      int2:   c + 1 -> c[x]
2224   L07112:  .1..1...11  -> L07110                   if no carry go to int1
2225   L07113:  111.1.111.                      int3:   a exchange c[w]
2226   L07114:  1.1.1.1...                              m -> c
2227   L07115:  ...1.11...                              load constant 1
2228   L07116:  ..11.11...                              load constant 3
2229   L07117:  ...1...11.                              if a >= c[m]
2230   L07120:  1111111.11  -> L07376                        then go to err2
2231   L07121:  .11..11...                              load constant 6
2232   L07122:  1.1...11..                              10 -> p
2233   L07123:  ...1....1.                              if a >= c[p]
2234   L07124:  1111111.11  -> L07376                        then go to err2
2235   L07125:  1.....11..                              8 -> p
2236   L07126:  1.11.1..1.                              shift right a[wp]
2237   L07127:  .111..11..                              7 -> p
2238   L07130:  .11..11...                              load constant 6
2239   L07131:  .111..11..                              7 -> p
2240   L07132:  ...1....1.                              if a >= c[p]
2241   L07133:  1111111.11  -> L07376                        then go to err2
2242   L07134:  ..1.1.1...                              c exchange m
2243   L07135:  .1.1..11..                              5 -> p
2244   L07136:  1.11.1..1.                              shift right a[wp]
2245   L07137:  1.11.1..1.                              shift right a[wp]
2246   L07140:  1.11.1..1.                              shift right a[wp]
2247   L07141:  1.11.1..1.                              shift right a[wp]
2248   L07142:  11..1.111.                              a exchange b[w]
2249   L07143:  11.111..1.                              a - 1 -> a[wp]
2250   L07144:  1.111.1.1.                              0 -> a[x]
2251   L07145:  1.....11..                              8 -> p
2252   L07146:  11.11...1.                              a - 1 -> a[p]
2253   L07147:  1.11..11..                              11 -> p
2254   L07150:  11111...1.                              a + 1 -> a[p]
2255   L07151:  11111...1.                              a + 1 -> a[p]
2256   L07152:  11.111111.                              a - 1 -> a[s]
2257   L07153:  11..1.111.                              a exchange b[w]
2258   L07154:  ....1..1..                      key2:   0 -> s0
2259   L07155:  ..1.1..1.1  -> L07051                   jsb dl06
2260   L07156:  ..1.1..1.1  -> L07051                   jsb dl06
2261   L07157:  .....1.1..                              if s0 # 1
2262   L07160:  1...11..11  -> L07214                        then go to key3
2263   L07161:  1.1..11.11  -> L07246                   go to wt12
2264                                            
2265   L07162:  1.1....1..                      chs4:   1 -> s10
2266   L07163:  1.1..1..11  -> L07244                   go to wt20
2267                                            
2268   L07164:  ......1.1.                      eex1:   if b[x] = 0
2269   L07165:  1...1...11  -> L07210                        then go to eex2
2270   L07166:  ....1.1.1.                              0 -> b[x]
2271   L07167:  .....11111  -> L07007                   go to wt18
2272                                            
2273   L07170:  ..........                              no operation
2274   L07171:  ..........                              no operation
2275                                            
2276   L07172:  ..11.11...                      reg3:   load constant 3
2277   L07173:  1..1..1111  -> L07223                   go to rega
2278                                            
2279   L07174:  ..1..11...                      reg2:   load constant 2
2280   L07175:  1..1..1111  -> L07223           reg1:   go to rega
2281                                            
2282   L07176:  .11..1....  -> L03177  *****    fst1:   select rom 3
2283                                            
2284   L07177:  .....1.1..                      key1:   if s0 # 1
2285   L07200:  .......111  -> L07001                        then go to wt30
2286   L07201:  1....1.1..                              if s8 # 1
2287   L07202:  .11.11..11  -> L07154                        then go to key2
2288   L07203:  1...1.1...                              display off
2289   L07204:  1...1..1..                              0 -> s8
2290   L07205:  11....11..                              12 -> p
2291   L07206:  ..11..111.                              0 -> c[w]
2292   L07207:  ..11.1....                              keys -> rom address
2293                                            
2294   L07210:  11..1.1.1.                      eex2:   a exchange b[x]
2295   L07211:  11.11.1.1.                              a - 1 -> a[x]
2296   L07212:  11..1.1.1.                              a exchange b[x]
2297   L07213:  1.1..1.111  -> L07245                   go to wt16
2298                                            
2299   L07214:  1......1..                      key3:   1 -> s8
2300   L07215:  ..1....111  -> L07041                   go to wt11
2301                                            
2302   L07216:  1.1..1.1..                      chs2:   if s10 # 1
2303   L07217:  .111..1.11  -> L07162                        then go to chs4
2304   L07220:  1.1.1..1..                      chs3:   0 -> s10
2305   L07221:  1..111....                              c -> data address
2306   L07222:  1..1.11.11  -> L07226                   go to chs5
2307                                            
2308   L07223:  1..111....                      rega:   c -> data address
2309   L07224:  1.1..1.1..                              if s10 # 1
2310   L07225:  1..11.1111  -> L07233                        then go to regb
2311   L07226:  111.1.111.                      chs5:   a exchange c[w]
2312   L07227:  .11...111.                              c -> a[w]
2313   L07230:  1..1...11.                              shift right c[m]
2314   L07231:  1.1111....                              c -> data
2315   L07232:  1.1..11.11  -> L07246                   go to wt12
2316                                            
2317   L07233:  1.11111...                      regb:   data -> c
2318   L07234:  11....11..                              12 -> p
2319   L07235:  .11.1...1.                              if c[p] = 0
2320   L07236:  1.1.....11  -> L07240                        then go to regc
2321   L07237:  ..11..111.                              0 -> c[w]
2322   L07240:  111.1.111.                      regc:   a exchange c[w]
2323   L07241:  .1...1.11.                              shift left a[ms]
2324   L07242:  ..1.11.1.1  -> L07055           wt29:   jsb dl05
2325   L07243:  ..1.1111.1  -> L07057           wt24:   jsb dl04
2326   L07244:  ..1.1111.1  -> L07057           wt20:   jsb dl04
2327   L07245:  ..1.1111.1  -> L07057           wt16:   jsb dl04
2328   L07246:  ..1.1111.1  -> L07057           wt12:   jsb dl04
2329   L07247:  ..11.111.1  -> L07067           wt08:   jsb dl03
2330   L07250:  1.1.1.1...                      wt05:   m -> c
2331   L07251:  1...1.1...                              display off
2332   L07252:  ....1.1...                              display toggle
2333   L07253:  1.1..1.1..                              if s10 # 1
2334   L07254:  .111111111  -> L07177                        then go to key1
2335                                            
2336   L07255:  ...1..11..                      tim0:   1 -> p                  ; increment hundredths of seconds
2337   L07256:  111111..1.                              a + 1 -> a[wp]
2338   L07257:  .111111111  -> L07177                   if no carry go to key1
2339                                            
2340   L07260:  .11...11..                              6 -> p                  ; increment seconds
2341   L07261:  11111...1.                              a + 1 -> a[p]
2342   L07262:  1.1...1.11  -> L07242                   if no carry go to wt29
2343   L07263:  .111..11..                              7 -> p
2344   L07264:  11111...1.                              a + 1 -> a[p]
2345   L07265:  ...1....1.                              if a >= c[p]
2346   L07266:  1.111...11  -> L07270                        then go to tim1
2347   L07267:  1.1...1111  -> L07243                   go to wt24
2348                                            
2349   L07270:  1.1111..1.                      tim1:   0 -> a[wp]
2350                                            
2351   L07271:  1..1..11..                              9 -> p                  ; increment minutes
2352   L07272:  11111...1.                              a + 1 -> a[p]
2353   L07273:  ....11.111  -> L07015                   if no carry go to wt21
2354   L07274:  1.1...11..                              10 -> p
2355   L07275:  11111...1.                              a + 1 -> a[p]
2356   L07276:  ...1....1.                              if a >= c[p]
2357   L07277:  11.....111  -> L07301                        then go to tim2
2358   L07300:  1.1..1.111  -> L07245                   go to wt16
2359                                            
2360   L07301:  ..11.1..1.                      tim2:   0 -> c[wp]
2361   L07302:  1.1111..1.                              0 -> a[wp]
2362                                            
2363   L07303:  1.11..11..                              11 -> p                 ; increment hours
2364   L07304:  11111...1.                              a + 1 -> a[p]
2365   L07305:  11..1.1.11  -> L07312                   if no carry go to tim3
2366   L07306:  1.111.111.                              0 -> a[w]
2367   L07307:  11....11..                              12 -> p
2368   L07310:  11111...1.                              a + 1 -> a[p]
2369   L07311:  1.1..11111  -> L07247                   if no carry go to wt08
2370                                            
2371   L07312:  ...1...11.                      tim3:   if a >= c[m]
2372   L07313:  11..11.111  -> L07315                        then go to tim4
2373   L07314:  ....1..111  -> L07011                   go to wt09
2374                                            
2375   L07315:  1.111.111.                      tim4:   0 -> a[w]
2376   L07316:  1.11..11..                              11 -> p
2377   L07317:  11111...1.                              a + 1 -> a[p]
2378   L07320:  ...11..111  -> L07031                   if no carry go to wt06
2379                                            
2380   L07321:  1.1.1.1...                      retn:   m -> c
2381   L07322:  ..11.1..1.                              0 -> c[wp]
2382   L07323:  ..1...11..                              2 -> p
2383   L07324:  ......1.1.                              if b[x] = 0
2384   L07325:  11.11...11  -> L07330                        then go to ret1
2385   L07326:  .1...11...                              load constant 4
2386   L07327:  11.11..111  -> L07331                   go to ret2
2387                                            
2388   L07330:  .11..11...                      ret1:   load constant 6
2389   L07331:  ..1.1.1...                      ret2:   c exchange m
2390   L07332:  ..11..111.                              0 -> c[w]
2391   L07333:  11....11..                              12 -> p
2392   L07334:  ....1.111.                              0 -> b[w]
2393   L07335:  1..111....                      ret3:   c -> data address
2394   L07336:  1...1.111.                              b exchange c[w]
2395   L07337:  1.11111...                              data -> c
2396   L07340:  ...11...1.                              if c[p] >= 1
2397   L07341:  111..1..11  -> L07344                        then go to ret4
2398   L07342:  111.1.11.1  -> L07353                   jsb fixx
2399   L07343:  1.1111....                              c -> data
2400   L07344:  1...1.111.                      ret4:   b exchange c[w]
2401   L07345:  .1111...1.                              c + 1 -> c[p]
2402   L07346:  11.111.111  -> L07335                   if no carry go to ret3
2403   L07347:  1.11...11.                              shift right a[m]
2404   L07350:  111.1.111.                              a exchange c[w]
2405   L07351:  111.1.11.1  -> L07353                   jsb fixx
2406   L07352:  .111111.11  -> L07176                   go to fst1
2407                                            
2408   L07353:  .11.11..1.                      fixx:   if c[wp] = 0
2409   L07354:  111111.111  -> L07375                        then go to rtrn
2410   L07355:  111.1.111.                              a exchange c[w]
2411   L07356:  .1....111.                              shift left a[w]
2412   L07357:  1.....11..                              8 -> p
2413   L07360:  .1...1..1.                              shift left a[wp]
2414   L07361:  .11...11..                              6 -> p
2415   L07362:  .1...1..1.                              shift left a[wp]
2416   L07363:  .1...1..1.                              shift left a[wp]
2417   L07364:  .1...1..1.                              shift left a[wp]
2418   L07365:  11....11..                              12 -> p
2419   L07366:  11111.1.1.                              a + 1 -> a[x]
2420   L07367:  1..11...1.                      fix2:   if a[p] >= 1
2421   L07370:  111111..11  -> L07374                        then go to fxrt
2422   L07371:  11.11.1.1.                              a - 1 -> a[x]
2423   L07372:  .1.....11.                              shift left a[m]
2424   L07373:  1111.11111  -> L07367                   go to fix2
2425   L07374:  111.1.111.                      fxrt:   a exchange c[w]
2426   L07375:  ....11....                      rtrn:   return
2427                                            
2428   L07376:  ..11..111.                      err2:   0 -> c[w]
2429   L07377:  .1..1.11.1  -> L07113                   jsb int3
2430                                            
00026 addd 2171
00073 chs1 2208
00216 chs2 2302
00220 chs3 2304
00162 chs4 2265
00226 chs5 2311
00074 clok 2209
00070 clrx 2205
00052 coss 2191
00043 dcpt 2184
00044 dig0 2185
00034 dig1 2177
00033 dig2 2176
00032 dig3 2175
00024 dig4 2169
00023 dig5 2168
00022 dig6 2167
00064 dig7 2201
00063 dig8 2200
00062 dig9 2199
00046 divd 2187
00067 dl03 2204
00057 dl04 2196
00055 dl05 2194
00051 dl06 2190
00164 eex1 2268
00210 eex2 2294
00072 eexx 2207
00075 ent1 2210
00076 ent1z3 2212
00376 err2 2428
00016 exc1 2163
00003 expn 2152
00002 fix1 2151
00367 fix2 2420
00353 fixx 2408
00176 fst1 2282
00374 fxrt 2425
00100 init 2214
00110 int1 2222
00111 int2 2223
00113 int3 2225
00006 invx 2155
00177 key1 2284
00154 key2 2258
00214 key3 2299
00004 lnnn 2153
00036 mult 2179
00010 perc 2157
00000 prfx 2149
00012 rcal 2159
00175 reg1 2280
00174 reg2 2279
00172 reg3 2276
00037 reg5 2180
00060 reg6 2197
00027 reg8 2172
00017 reg9 2164
00223 rega 2308
00233 regb 2317
00240 regc 2322
00330 ret1 2388
00331 ret2 2389
00335 ret3 2393
00344 ret4 2400
00321 retn 2380
00014 rold 2161
00375 rtrn 2426
00042 sigp 2183
00053 sinn 2192
00056 sqar 2195
00013 stor 2160
00066 subt 2203
00050 tang 2189
00255 tim0 2336
00270 tim1 2349
00301 tim2 2360
00312 tim3 2371
00315 tim4 2375
00054 tpol 2193
00250 wt05 2330
00031 wt06 2174
00247 wt08 2329
00011 wt09 2158
00047 wt10 2188
00041 wt11 2182
00246 wt12 2328
00245 wt16 2327
00021 wt17 2166
00007 wt18 2156
00244 wt20 2326
00015 wt21 2162
00005 wt22 2154
00243 wt24 2325
00242 wt29 2324
00001 wt30 2150
0 errors, 0 warnings
